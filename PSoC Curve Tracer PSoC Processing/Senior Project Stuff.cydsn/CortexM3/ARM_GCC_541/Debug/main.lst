ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_i2d
  20              		.global	__aeabi_ddiv
  21              		.section	.text.single_test,"ax",%progbits
  22              		.align	2
  23              		.global	single_test
  24              		.thumb
  25              		.thumb_func
  26              		.type	single_test, %function
  27              	single_test:
  28              	.LFB64:
  29              		.file 1 "main.c"
   1:main.c        **** #include "project.h"
   2:main.c        **** #include "stdio.h"
   3:main.c        **** #include "math.h"
   4:main.c        **** #include "string.h"
   5:main.c        **** #include "settings.h"
   6:main.c        **** 
   7:main.c        **** #define VDAC_G_B_MAX 255 //Max VDAC code for the Gate/Base 
   8:main.c        **** #define VDAC_D_C_MAX 188 //Max VDAC for the Drain/Common
   9:main.c        **** #define VDS_NMOS_LENGTH ((VDAC_D_C_MAX/VD_STEP_NMOS) + 1)
  10:main.c        **** #define VCE_NPN_LENGTH  ((VDAC_D_C_MAX/VC_STEP_NPN) + 1)
  11:main.c        **** #define VDS_PMOS_LENGTH ((VDAC_D_C_MAX/VD_STEP_PMOS) + 1)
  12:main.c        **** #define VCE_PNP_LENGTH  ((VDAC_D_C_MAX/VC_STEP_PNP) + 1)
  13:main.c        **** #define VDAC_N_1_VOLT 21
  14:main.c        **** #define VDAC_P_1_VOLT 13
  15:main.c        **** #define ADC_GAIN 51.7
  16:main.c        **** #define Y_RES 240
  17:main.c        **** #define X_RES 320
  18:main.c        **** 
  19:main.c        **** //The lengths of Drain or Common testing points
  20:main.c        **** 
  21:main.c        **** //Conducts a test for a singular Vds and Vgs
  22:main.c        **** double single_test(unsigned char Vds, unsigned char Vgs)
  23:main.c        **** {
  30              		.loc 1 23 0
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 16
  33              		@ frame_needed = 1, uses_anonymous_args = 0
  34 0000 90B5     		push	{r4, r7, lr}
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 2


  35              		.cfi_def_cfa_offset 12
  36              		.cfi_offset 4, -12
  37              		.cfi_offset 7, -8
  38              		.cfi_offset 14, -4
  39 0002 85B0     		sub	sp, sp, #20
  40              		.cfi_def_cfa_offset 32
  41 0004 00AF     		add	r7, sp, #0
  42              		.cfi_def_cfa_register 7
  43 0006 0346     		mov	r3, r0
  44 0008 0A46     		mov	r2, r1
  45 000a FB71     		strb	r3, [r7, #7]
  46 000c 1346     		mov	r3, r2
  47 000e BB71     		strb	r3, [r7, #6]
  24:main.c        ****     double Output;
  25:main.c        ****     VDAC8_DS_SetValue(Vds);
  48              		.loc 1 25 0
  49 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  50 0012 1846     		mov	r0, r3
  51 0014 FFF7FEFF 		bl	VDAC8_DS_SetValue
  26:main.c        ****     VDAC8_GS_SetValue(Vgs);
  52              		.loc 1 26 0
  53 0018 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  54 001a 1846     		mov	r0, r3
  55 001c FFF7FEFF 		bl	VDAC8_GS_SetValue
  27:main.c        ****     CyDelay(SETTLING_WAIT_TIME);
  56              		.loc 1 27 0
  57 0020 0120     		movs	r0, #1
  58 0022 FFF7FEFF 		bl	CyDelay
  28:main.c        ****     ADC_SAR_1_StartConvert();
  59              		.loc 1 28 0
  60 0026 FFF7FEFF 		bl	ADC_SAR_1_StartConvert
  29:main.c        ****     ADC_SAR_1_IsEndConversion(ADC_SAR_1_WAIT_FOR_RESULT);
  61              		.loc 1 29 0
  62 002a 0020     		movs	r0, #0
  63 002c FFF7FEFF 		bl	ADC_SAR_1_IsEndConversion
  30:main.c        **** 	//waiting until conversion is over
  31:main.c        ****     ADC_SAR_1_StopConvert();
  64              		.loc 1 31 0
  65 0030 FFF7FEFF 		bl	ADC_SAR_1_StopConvert
  32:main.c        ****     Output = (ADC_SAR_1_CountsTo_mVolts(ADC_SAR_1_GetResult16())/ADC_GAIN);
  66              		.loc 1 32 0
  67 0034 FFF7FEFF 		bl	ADC_SAR_1_GetResult16
  68 0038 0346     		mov	r3, r0
  69 003a 1846     		mov	r0, r3
  70 003c FFF7FEFF 		bl	ADC_SAR_1_CountsTo_mVolts
  71 0040 0346     		mov	r3, r0
  72 0042 1846     		mov	r0, r3
  73 0044 FFF7FEFF 		bl	__aeabi_i2d
  74 0048 07A3     		adr	r3, .L3
  75 004a D3E90023 		ldrd	r2, [r3]
  76 004e FFF7FEFF 		bl	__aeabi_ddiv
  77 0052 0346     		mov	r3, r0
  78 0054 0C46     		mov	r4, r1
  79 0056 C7E90234 		strd	r3, [r7, #8]
  33:main.c        ****     return Output;
  80              		.loc 1 33 0
  81 005a D7E90234 		ldrd	r3, [r7, #8]
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 3


  34:main.c        **** }
  82              		.loc 1 34 0
  83 005e 1846     		mov	r0, r3
  84 0060 2146     		mov	r1, r4
  85 0062 1437     		adds	r7, r7, #20
  86              		.cfi_def_cfa_offset 12
  87 0064 BD46     		mov	sp, r7
  88              		.cfi_def_cfa_register 13
  89              		@ sp needed
  90 0066 90BD     		pop	{r4, r7, pc}
  91              	.L4:
  92              		.align	3
  93              	.L3:
  94 0068 9A999999 		.word	-1717986918
  95 006c 99D94940 		.word	1078581657
  96              		.cfi_endproc
  97              	.LFE64:
  98              		.size	single_test, .-single_test
  99              		.section	.text.single_test_preset_vds,"ax",%progbits
 100              		.align	2
 101              		.global	single_test_preset_vds
 102              		.thumb
 103              		.thumb_func
 104              		.type	single_test_preset_vds, %function
 105              	single_test_preset_vds:
 106              	.LFB65:
  35:main.c        **** 
  36:main.c        **** double single_test_preset_vds(unsigned char Vgs)
  37:main.c        **** {
 107              		.loc 1 37 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 16
 110              		@ frame_needed = 1, uses_anonymous_args = 0
 111 0000 90B5     		push	{r4, r7, lr}
 112              		.cfi_def_cfa_offset 12
 113              		.cfi_offset 4, -12
 114              		.cfi_offset 7, -8
 115              		.cfi_offset 14, -4
 116 0002 85B0     		sub	sp, sp, #20
 117              		.cfi_def_cfa_offset 32
 118 0004 00AF     		add	r7, sp, #0
 119              		.cfi_def_cfa_register 7
 120 0006 0346     		mov	r3, r0
 121 0008 FB71     		strb	r3, [r7, #7]
  38:main.c        ****     double Output;
  39:main.c        ****     VDAC8_GS_SetValue(Vgs);
 122              		.loc 1 39 0
 123 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 124 000c 1846     		mov	r0, r3
 125 000e FFF7FEFF 		bl	VDAC8_GS_SetValue
  40:main.c        ****     CyDelay(SETTLING_WAIT_TIME);
 126              		.loc 1 40 0
 127 0012 0120     		movs	r0, #1
 128 0014 FFF7FEFF 		bl	CyDelay
  41:main.c        ****     ADC_SAR_1_StartConvert();
 129              		.loc 1 41 0
 130 0018 FFF7FEFF 		bl	ADC_SAR_1_StartConvert
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 4


  42:main.c        ****     ADC_SAR_1_IsEndConversion(ADC_SAR_1_WAIT_FOR_RESULT);
 131              		.loc 1 42 0
 132 001c 0020     		movs	r0, #0
 133 001e FFF7FEFF 		bl	ADC_SAR_1_IsEndConversion
  43:main.c        **** 	//waiting until conversion is over
  44:main.c        ****     ADC_SAR_1_StopConvert();
 134              		.loc 1 44 0
 135 0022 FFF7FEFF 		bl	ADC_SAR_1_StopConvert
  45:main.c        ****     Output = (ADC_SAR_1_CountsTo_mVolts(ADC_SAR_1_GetResult16())/ADC_GAIN);
 136              		.loc 1 45 0
 137 0026 FFF7FEFF 		bl	ADC_SAR_1_GetResult16
 138 002a 0346     		mov	r3, r0
 139 002c 1846     		mov	r0, r3
 140 002e FFF7FEFF 		bl	ADC_SAR_1_CountsTo_mVolts
 141 0032 0346     		mov	r3, r0
 142 0034 1846     		mov	r0, r3
 143 0036 FFF7FEFF 		bl	__aeabi_i2d
 144 003a 09A3     		adr	r3, .L7
 145 003c D3E90023 		ldrd	r2, [r3]
 146 0040 FFF7FEFF 		bl	__aeabi_ddiv
 147 0044 0346     		mov	r3, r0
 148 0046 0C46     		mov	r4, r1
 149 0048 C7E90234 		strd	r3, [r7, #8]
  46:main.c        ****     return Output;
 150              		.loc 1 46 0
 151 004c D7E90234 		ldrd	r3, [r7, #8]
  47:main.c        **** }
 152              		.loc 1 47 0
 153 0050 1846     		mov	r0, r3
 154 0052 2146     		mov	r1, r4
 155 0054 1437     		adds	r7, r7, #20
 156              		.cfi_def_cfa_offset 12
 157 0056 BD46     		mov	sp, r7
 158              		.cfi_def_cfa_register 13
 159              		@ sp needed
 160 0058 90BD     		pop	{r4, r7, pc}
 161              	.L8:
 162 005a 00BFAFF3 		.align	3
 162      0080
 163              	.L7:
 164 0060 9A999999 		.word	-1717986918
 165 0064 99D94940 		.word	1078581657
 166              		.cfi_endproc
 167              	.LFE65:
 168              		.size	single_test_preset_vds, .-single_test_preset_vds
 169              		.global	__aeabi_dcmpgt
 170              		.section	.text.vgs_th_find,"ax",%progbits
 171              		.align	2
 172              		.global	vgs_th_find
 173              		.thumb
 174              		.thumb_func
 175              		.type	vgs_th_find, %function
 176              	vgs_th_find:
 177              	.LFB66:
  48:main.c        ****     
  49:main.c        **** 
  50:main.c        **** //Finds Vth (The minimum Vgs needed to turn the transistor by sorting through Vgs's until 
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 5


  51:main.c        **** //a minumum current of 1 mA is found Id is found by a 1 Ohm series resistor whose potential 
  52:main.c        **** //difference is magnitifed 100 fold for accurate reading
  53:main.c        **** int vgs_th_find(unsigned char Vgs_max, unsigned char Vds)
  54:main.c        **** {
 178              		.loc 1 54 0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 24
 181              		@ frame_needed = 1, uses_anonymous_args = 0
 182 0000 90B5     		push	{r4, r7, lr}
 183              		.cfi_def_cfa_offset 12
 184              		.cfi_offset 4, -12
 185              		.cfi_offset 7, -8
 186              		.cfi_offset 14, -4
 187 0002 87B0     		sub	sp, sp, #28
 188              		.cfi_def_cfa_offset 40
 189 0004 00AF     		add	r7, sp, #0
 190              		.cfi_def_cfa_register 7
 191 0006 0346     		mov	r3, r0
 192 0008 0A46     		mov	r2, r1
 193 000a FB71     		strb	r3, [r7, #7]
 194 000c 1346     		mov	r3, r2
 195 000e BB71     		strb	r3, [r7, #6]
  55:main.c        ****     unsigned char   Vgs;           
  56:main.c        **** 	//The Gate-Drain Voltage difference | Vds_real = Vds/256 * 4.096 * 3 (OpAmp gain)
  57:main.c        ****     double          Id=0;         
 196              		.loc 1 57 0
 197 0010 4FF00003 		mov	r3, #0
 198 0014 4FF00004 		mov	r4, #0
 199 0018 C7E90234 		strd	r3, [r7, #8]
  58:main.c        **** 	//The Drain Current | Id_real = Id/100
  59:main.c        ****     
  60:main.c        ****     VDAC8_DS_SetValue(Vds); //Set Vds to 1 Volt
 200              		.loc 1 60 0
 201 001c BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 202 001e 1846     		mov	r0, r3
 203 0020 FFF7FEFF 		bl	VDAC8_DS_SetValue
  61:main.c        ****     VDAC8_GS_SetValue(0);
 204              		.loc 1 61 0
 205 0024 0020     		movs	r0, #0
 206 0026 FFF7FEFF 		bl	VDAC8_GS_SetValue
  62:main.c        ****     for(Vgs = 0; Vgs < Vgs_max; Vgs++)
 207              		.loc 1 62 0
 208 002a 0023     		movs	r3, #0
 209 002c FB75     		strb	r3, [r7, #23]
 210 002e 16E0     		b	.L10
 211              	.L14:
  63:main.c        ****     {
  64:main.c        ****         Id = single_test(Vgs, Vgs);
 212              		.loc 1 64 0
 213 0030 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 214 0032 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 215 0034 1146     		mov	r1, r2
 216 0036 1846     		mov	r0, r3
 217 0038 FFF7FEFF 		bl	single_test
 218 003c C7E90201 		strd	r0, [r7, #8]
  65:main.c        ****         if(Id > ID_TH)
 219              		.loc 1 65 0
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 6


 220 0040 4FF00002 		mov	r2, #0
 221 0044 0B4B     		ldr	r3, .L17
 222 0046 D7E90201 		ldrd	r0, [r7, #8]
 223 004a FFF7FEFF 		bl	__aeabi_dcmpgt
 224 004e 0346     		mov	r3, r0
 225 0050 002B     		cmp	r3, #0
 226 0052 01D0     		beq	.L16
  66:main.c        ****         {
  67:main.c        ****             //Once Id > 1 mV transistor is "on" and we can return Vgs as Vth
  68:main.c        ****             return Vgs;
 227              		.loc 1 68 0
 228 0054 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 229 0056 08E0     		b	.L13
 230              	.L16:
  62:main.c        ****     {
 231              		.loc 1 62 0 discriminator 2
 232 0058 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 233 005a 0133     		adds	r3, r3, #1
 234 005c FB75     		strb	r3, [r7, #23]
 235              	.L10:
  62:main.c        ****     {
 236              		.loc 1 62 0 is_stmt 0 discriminator 1
 237 005e FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 238 0060 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 239 0062 9A42     		cmp	r2, r3
 240 0064 E4D3     		bcc	.L14
  69:main.c        ****         }
  70:main.c        ****     }
  71:main.c        ****     return -1; //If a Vth cannot be found
 241              		.loc 1 71 0 is_stmt 1
 242 0066 4FF0FF33 		mov	r3, #-1
 243              	.L13:
  72:main.c        **** }
 244              		.loc 1 72 0
 245 006a 1846     		mov	r0, r3
 246 006c 1C37     		adds	r7, r7, #28
 247              		.cfi_def_cfa_offset 12
 248 006e BD46     		mov	sp, r7
 249              		.cfi_def_cfa_register 13
 250              		@ sp needed
 251 0070 90BD     		pop	{r4, r7, pc}
 252              	.L18:
 253 0072 00BF     		.align	2
 254              	.L17:
 255 0074 0000F03F 		.word	1072693248
 256              		.cfi_endproc
 257              	.LFE66:
 258              		.size	vgs_th_find, .-vgs_th_find
 259              		.global	__aeabi_dcmpge
 260              		.section	.text.vgs_max_id_find,"ax",%progbits
 261              		.align	2
 262              		.global	vgs_max_id_find
 263              		.thumb
 264              		.thumb_func
 265              		.type	vgs_max_id_find, %function
 266              	vgs_max_id_find:
 267              	.LFB67:
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 7


  73:main.c        **** 
  74:main.c        **** //Finds the MAX current 20mA, Id is found through a 100 Ohm series resistor
  75:main.c        **** //Sweeps through Vgs until a max current of 20 mA is found
  76:main.c        **** //Therefor ID_MAX = 20*100 == 2000
  77:main.c        **** unsigned short vgs_max_id_find(unsigned char Vth, unsigned char Vds_max, unsigned char Vgs_max)
  78:main.c        **** {
 268              		.loc 1 78 0
 269              		.cfi_startproc
 270              		@ args = 0, pretend = 0, frame = 24
 271              		@ frame_needed = 1, uses_anonymous_args = 0
 272 0000 80B5     		push	{r7, lr}
 273              		.cfi_def_cfa_offset 8
 274              		.cfi_offset 7, -8
 275              		.cfi_offset 14, -4
 276 0002 86B0     		sub	sp, sp, #24
 277              		.cfi_def_cfa_offset 32
 278 0004 00AF     		add	r7, sp, #0
 279              		.cfi_def_cfa_register 7
 280 0006 0346     		mov	r3, r0
 281 0008 FB71     		strb	r3, [r7, #7]
 282 000a 0B46     		mov	r3, r1
 283 000c BB71     		strb	r3, [r7, #6]
 284 000e 1346     		mov	r3, r2
 285 0010 7B71     		strb	r3, [r7, #5]
  79:main.c        ****     unsigned char   Vgs;
  80:main.c        **** 	//The Gate-Source Voltage difference | Vgs_real = Vgs/256 * 4.096
  81:main.c        ****     double          Id; 
  82:main.c        **** 	//The Drain Current | Id_real = Id/100
  83:main.c        ****     
  84:main.c        ****     VDAC8_DS_SetValue(Vds_max);
 286              		.loc 1 84 0
 287 0012 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 288 0014 1846     		mov	r0, r3
 289 0016 FFF7FEFF 		bl	VDAC8_DS_SetValue
  85:main.c        **** 	//Sets Vds = 188/256 * 4.096 * 3 = 9V (max Vds to test wtih) to find max current
  86:main.c        ****     for(Vgs = Vth; Vgs < Vgs_max; Vgs++)
 290              		.loc 1 86 0
 291 001a FB79     		ldrb	r3, [r7, #7]
 292 001c FB75     		strb	r3, [r7, #23]
 293 001e 12E0     		b	.L20
 294              	.L24:
  87:main.c        ****     {
  88:main.c        ****         Id = single_test_preset_vds(Vgs);
 295              		.loc 1 88 0
 296 0020 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 297 0022 1846     		mov	r0, r3
 298 0024 FFF7FEFF 		bl	single_test_preset_vds
 299 0028 C7E90201 		strd	r0, [r7, #8]
  89:main.c        ****         if (Id >= ID_MAX)
 300              		.loc 1 89 0
 301 002c 4FF00002 		mov	r2, #0
 302 0030 0C4B     		ldr	r3, .L27
 303 0032 D7E90201 		ldrd	r0, [r7, #8]
 304 0036 FFF7FEFF 		bl	__aeabi_dcmpge
 305 003a 0346     		mov	r3, r0
 306 003c 002B     		cmp	r3, #0
 307 003e 07D1     		bne	.L26
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 8


  86:main.c        ****     {
 308              		.loc 1 86 0 discriminator 2
 309 0040 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 310 0042 0133     		adds	r3, r3, #1
 311 0044 FB75     		strb	r3, [r7, #23]
 312              	.L20:
  86:main.c        ****     {
 313              		.loc 1 86 0 is_stmt 0 discriminator 1
 314 0046 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 315 0048 7B79     		ldrb	r3, [r7, #5]	@ zero_extendqisi2
 316 004a 9A42     		cmp	r2, r3
 317 004c E8D3     		bcc	.L24
 318 004e 00E0     		b	.L23
 319              	.L26:
  90:main.c        ****         {
  91:main.c        ****             break; //Stop stepping once max current is hit
 320              		.loc 1 91 0 is_stmt 1
 321 0050 00BF     		nop
 322              	.L23:
  92:main.c        ****         }
  93:main.c        ****     }
  94:main.c        ****     return Vgs - 1; //Returns the previous Vgs step to avoid going past 20mA
 323              		.loc 1 94 0
 324 0052 FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
 325 0054 9BB2     		uxth	r3, r3
 326 0056 013B     		subs	r3, r3, #1
 327 0058 9BB2     		uxth	r3, r3
  95:main.c        **** }
 328              		.loc 1 95 0
 329 005a 1846     		mov	r0, r3
 330 005c 1837     		adds	r7, r7, #24
 331              		.cfi_def_cfa_offset 8
 332 005e BD46     		mov	sp, r7
 333              		.cfi_def_cfa_register 13
 334              		@ sp needed
 335 0060 80BD     		pop	{r7, pc}
 336              	.L28:
 337 0062 00BF     		.align	2
 338              	.L27:
 339 0064 00003440 		.word	1077149696
 340              		.cfi_endproc
 341              	.LFE67:
 342              		.size	vgs_max_id_find, .-vgs_max_id_find
 343              		.global	__aeabi_dmul
 344              		.global	__aeabi_d2iz
 345              		.section	.text.main,"ax",%progbits
 346              		.align	2
 347              		.global	main
 348              		.thumb
 349              		.thumb_func
 350              		.type	main, %function
 351              	main:
 352              	.LFB68:
  96:main.c        **** 
  97:main.c        **** 
  98:main.c        **** 
  99:main.c        **** int main(void)
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 9


 100:main.c        **** {
 353              		.loc 1 100 0
 354              		.cfi_startproc
 355              		@ args = 0, pretend = 0, frame = 7792
 356              		@ frame_needed = 1, uses_anonymous_args = 0
 357 0000 B0B5     		push	{r4, r5, r7, lr}
 358              		.cfi_def_cfa_offset 16
 359              		.cfi_offset 4, -16
 360              		.cfi_offset 5, -12
 361              		.cfi_offset 7, -8
 362              		.cfi_offset 14, -4
 363 0002 ADF5F35D 		sub	sp, sp, #7776
 364              		.cfi_def_cfa_offset 7792
 365 0006 84B0     		sub	sp, sp, #16
 366              		.cfi_def_cfa_offset 7808
 367 0008 00AF     		add	r7, sp, #0
 368              		.cfi_def_cfa_register 7
 101:main.c        ****     //Enabling VDACs and ADCs
 102:main.c        ****     VDAC8_GS_Start();
 369              		.loc 1 102 0
 370 000a FFF7FEFF 		bl	VDAC8_GS_Start
 103:main.c        ****     VDAC8_DS_Start();
 371              		.loc 1 103 0
 372 000e FFF7FEFF 		bl	VDAC8_DS_Start
 104:main.c        ****     ADC_SAR_1_Start();
 373              		.loc 1 104 0
 374 0012 FFF7FEFF 		bl	ADC_SAR_1_Start
 105:main.c        ****     
 106:main.c        ****     int return_code;    //Going to be used for error displays
 107:main.c        ****     
 108:main.c        ****     int i;  //used for for loop iterations
 109:main.c        ****     int j;  //used for for loop iterations
 110:main.c        ****     
 111:main.c        ****     unsigned char device_selection = 0;     //The device selected 0: NMOS, 1: PMOS, 3: NPN, 4: PNP
 375              		.loc 1 111 0
 376 0016 0023     		movs	r3, #0
 377 0018 07F5F352 		add	r2, r7, #7776
 378 001c 02F10702 		add	r2, r2, #7
 379 0020 1370     		strb	r3, [r2]
 112:main.c        ****     short y_max_mA = 25;                    //The highest plottable Id in mA
 380              		.loc 1 112 0
 381 0022 1923     		movs	r3, #25
 382 0024 07F5F352 		add	r2, r7, #7776
 383 0028 02F10402 		add	r2, r2, #4
 384 002c 1380     		strh	r3, [r2]	@ movhi
 113:main.c        ****     short x_max_mV = 4500;                  //the highest plottable Vds in mV
 385              		.loc 1 113 0
 386 002e 41F29413 		movw	r3, #4500
 387 0032 07F5F352 		add	r2, r7, #7776
 388 0036 02F10202 		add	r2, r2, #2
 389 003a 1380     		strh	r3, [r2]	@ movhi
 114:main.c        ****     
 115:main.c        ****     short Vth;      //VDAC code for the threshold voltage
 116:main.c        ****     short Vgs_max;  //VDAC code for the the maximum Vgs that produces < 20 mA
 117:main.c        ****     short x_pixel;
 118:main.c        ****     short y_pixel;
 119:main.c        ****     short x_pixel_prev;
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 10


 120:main.c        ****     short y_pixel_prev;
 121:main.c        ****     short curve_color[CURVE_NUM];
 122:main.c        ****     
 123:main.c        ****     unsigned char Vgs_step;                         //The stepping amount to create the Vgs test po
 124:main.c        ****     unsigned char Vgs_test_points[CURVE_NUM];       //The Vgs stepping points of ammount specified 
 125:main.c        ****     unsigned char Vds_test_points[VDS_NMOS_LENGTH]; //The Vds stepping points of ammount specified 
 126:main.c        ****     
 127:main.c        ****     double Output_data_y[CURVE_NUM][VDS_NMOS_LENGTH] = {0};   //The output data of Id NMOS trace in
 390              		.loc 1 127 0
 391 003c 07F5BE63 		add	r3, r7, #1520
 392 0040 083B     		subs	r3, r3, #8
 393 0042 1846     		mov	r0, r3
 394 0044 4FF4BD53 		mov	r3, #6048
 395 0048 1A46     		mov	r2, r3
 396 004a 0021     		movs	r1, #0
 397 004c FFF7FEFF 		bl	memset
 398              	.L74:
 128:main.c        ****     double Output_data_x[VDS_NMOS_LENGTH];                   //The Vds points used. Used for plotti
 129:main.c        ****     
 130:main.c        ****     
 131:main.c        ****     for(;;)
 132:main.c        ****     {
 133:main.c        ****         switch(device_selection){
 399              		.loc 1 133 0
 400 0050 07F5F353 		add	r3, r7, #7776
 401 0054 03F10703 		add	r3, r3, #7
 402 0058 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 403 005a 032B     		cmp	r3, #3
 404 005c 00F22886 		bhi	.L30
 405 0060 01A2     		adr	r2, .L32
 406 0062 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 407 0066 00BF     		.p2align 2
 408              	.L32:
 409 0068 79000000 		.word	.L31+1
 410 006c 05050000 		.word	.L33+1
 411 0070 9F070000 		.word	.L34+1
 412 0074 1D0A0000 		.word	.L35+1
 413              		.p2align 1
 414              	.L31:
 134:main.c        ****             case 0:
 135:main.c        ****                 ADC_SAR_1_Wakeup();
 415              		.loc 1 135 0
 416 0078 FFF7FEFF 		bl	ADC_SAR_1_Wakeup
 136:main.c        ****                 //case 0:
 137:main.c        ****                 //NMOS input
 138:main.c        ****                 Vth =  vgs_th_find(VDAC_G_B_MAX,VDAC_N_1_VOLT);
 417              		.loc 1 138 0
 418 007c 1521     		movs	r1, #21
 419 007e FF20     		movs	r0, #255
 420 0080 FFF7FEFF 		bl	vgs_th_find
 421 0084 0346     		mov	r3, r0
 422 0086 07F5F352 		add	r2, r7, #7776
 423 008a 1380     		strh	r3, [r2]	@ movhi
 139:main.c        ****                 if (Vth < 0)
 424              		.loc 1 139 0
 425 008c 07F5F353 		add	r3, r7, #7776
 426 0090 B3F90030 		ldrsh	r3, [r3]
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 11


 427 0094 002B     		cmp	r3, #0
 428 0096 C0F20A86 		blt	.L75
 140:main.c        ****                 {
 141:main.c        ****                     break;
 142:main.c        ****                 }
 143:main.c        ****                 Vgs_max = vgs_max_id_find(Vth,VDAC_D_C_MAX,220);
 429              		.loc 1 143 0
 430 009a 07F5F353 		add	r3, r7, #7776
 431 009e 1B88     		ldrh	r3, [r3]	@ movhi
 432 00a0 DBB2     		uxtb	r3, r3
 433 00a2 DC22     		movs	r2, #220
 434 00a4 BC21     		movs	r1, #188
 435 00a6 1846     		mov	r0, r3
 436 00a8 FFF7FEFF 		bl	vgs_max_id_find
 437 00ac 0346     		mov	r3, r0
 438 00ae 07F5F252 		add	r2, r7, #7744
 439 00b2 02F11E02 		add	r2, r2, #30
 440 00b6 1380     		strh	r3, [r2]	@ movhi
 144:main.c        ****                 Vgs_step = (Vgs_max - Vth)/(CURVE_NUM-1); //Creating the step size for linearlly sp
 441              		.loc 1 144 0
 442 00b8 07F5F253 		add	r3, r7, #7744
 443 00bc 03F11E03 		add	r3, r3, #30
 444 00c0 B3F90020 		ldrsh	r2, [r3]
 445 00c4 07F5F353 		add	r3, r7, #7776
 446 00c8 B3F90030 		ldrsh	r3, [r3]
 447 00cc D31A     		subs	r3, r2, r3
 448 00ce B64A     		ldr	r2, .L76
 449 00d0 82FB0312 		smull	r1, r2, r2, r3
 450 00d4 DB17     		asrs	r3, r3, #31
 451 00d6 D31A     		subs	r3, r2, r3
 452 00d8 07F5F252 		add	r2, r7, #7744
 453 00dc 02F11D02 		add	r2, r2, #29
 454 00e0 1370     		strb	r3, [r2]
 145:main.c        ****                 Vgs_test_points[0] = Vth;
 455              		.loc 1 145 0
 456 00e2 07F5F353 		add	r3, r7, #7776
 457 00e6 1B88     		ldrh	r3, [r3]	@ movhi
 458 00e8 DBB2     		uxtb	r3, r3
 459 00ea 07F5F252 		add	r2, r7, #7744
 460 00ee 02F10802 		add	r2, r2, #8
 461 00f2 1370     		strb	r3, [r2]
 146:main.c        ****                 for (i=1; i < CURVE_NUM; i++)
 462              		.loc 1 146 0
 463 00f4 0123     		movs	r3, #1
 464 00f6 07F5F352 		add	r2, r7, #7776
 465 00fa 02F10C02 		add	r2, r2, #12
 466 00fe 1360     		str	r3, [r2]
 467 0100 2AE0     		b	.L37
 468              	.L38:
 147:main.c        ****                 {
 148:main.c        ****                     Vgs_test_points[i] = (Vgs_test_points[i-1] + Vgs_step);
 469              		.loc 1 148 0 discriminator 3
 470 0102 07F5F353 		add	r3, r7, #7776
 471 0106 03F10C03 		add	r3, r3, #12
 472 010a 1B68     		ldr	r3, [r3]
 473 010c 013B     		subs	r3, r3, #1
 474 010e 07F5F352 		add	r2, r7, #7776
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 12


 475 0112 02F11002 		add	r2, r2, #16
 476 0116 1344     		add	r3, r3, r2
 477 0118 13F8282C 		ldrb	r2, [r3, #-40]	@ zero_extendqisi2
 478 011c 07F5F253 		add	r3, r7, #7744
 479 0120 03F11D03 		add	r3, r3, #29
 480 0124 1B78     		ldrb	r3, [r3]
 481 0126 1344     		add	r3, r3, r2
 482 0128 D9B2     		uxtb	r1, r3
 483 012a 07F5F252 		add	r2, r7, #7744
 484 012e 02F10802 		add	r2, r2, #8
 485 0132 07F5F353 		add	r3, r7, #7776
 486 0136 03F10C03 		add	r3, r3, #12
 487 013a 1B68     		ldr	r3, [r3]
 488 013c 1344     		add	r3, r3, r2
 489 013e 0A46     		mov	r2, r1
 490 0140 1A70     		strb	r2, [r3]
 146:main.c        ****                 for (i=1; i < CURVE_NUM; i++)
 491              		.loc 1 146 0 discriminator 3
 492 0142 07F5F353 		add	r3, r7, #7776
 493 0146 03F10C03 		add	r3, r3, #12
 494 014a 1B68     		ldr	r3, [r3]
 495 014c 0133     		adds	r3, r3, #1
 496 014e 07F5F352 		add	r2, r7, #7776
 497 0152 02F10C02 		add	r2, r2, #12
 498 0156 1360     		str	r3, [r2]
 499              	.L37:
 146:main.c        ****                 for (i=1; i < CURVE_NUM; i++)
 500              		.loc 1 146 0 is_stmt 0 discriminator 1
 501 0158 07F5F353 		add	r3, r7, #7776
 502 015c 03F10C03 		add	r3, r3, #12
 503 0160 1B68     		ldr	r3, [r3]
 504 0162 032B     		cmp	r3, #3
 505 0164 CDDD     		ble	.L38
 149:main.c        ****                 }
 150:main.c        ****                 Vds_test_points[0] = 0;
 506              		.loc 1 150 0 is_stmt 1
 507 0166 0023     		movs	r3, #0
 508 0168 07F5EC52 		add	r2, r7, #7552
 509 016c 02F10802 		add	r2, r2, #8
 510 0170 1370     		strb	r3, [r2]
 151:main.c        ****                 Output_data_x[0] = 0;
 511              		.loc 1 151 0
 512 0172 07F11003 		add	r3, r7, #16
 513 0176 103B     		subs	r3, r3, #16
 514 0178 4FF00001 		mov	r1, #0
 515 017c 4FF00002 		mov	r2, #0
 516 0180 C3E90012 		strd	r1, [r3]
 152:main.c        ****                 for(i=1; i < VDS_NMOS_LENGTH; i++)
 517              		.loc 1 152 0
 518 0184 0123     		movs	r3, #1
 519 0186 07F5F352 		add	r2, r7, #7776
 520 018a 02F10C02 		add	r2, r2, #12
 521 018e 1360     		str	r3, [r2]
 522 0190 4FE0     		b	.L39
 523              	.L40:
 153:main.c        ****                 {
 154:main.c        ****                     Vds_test_points[i] = Vds_test_points[i-1] + VD_STEP_NMOS;
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 13


 524              		.loc 1 154 0 discriminator 3
 525 0192 07F5F353 		add	r3, r7, #7776
 526 0196 03F10C03 		add	r3, r3, #12
 527 019a 1B68     		ldr	r3, [r3]
 528 019c 013B     		subs	r3, r3, #1
 529 019e 07F5F352 		add	r2, r7, #7776
 530 01a2 02F11002 		add	r2, r2, #16
 531 01a6 1344     		add	r3, r3, r2
 532 01a8 13F8E83C 		ldrb	r3, [r3, #-232]	@ zero_extendqisi2
 533 01ac 0133     		adds	r3, r3, #1
 534 01ae D9B2     		uxtb	r1, r3
 535 01b0 07F5EC52 		add	r2, r7, #7552
 536 01b4 02F10802 		add	r2, r2, #8
 537 01b8 07F5F353 		add	r3, r7, #7776
 538 01bc 03F10C03 		add	r3, r3, #12
 539 01c0 1B68     		ldr	r3, [r3]
 540 01c2 1344     		add	r3, r3, r2
 541 01c4 0A46     		mov	r2, r1
 542 01c6 1A70     		strb	r2, [r3]
 155:main.c        ****                     Output_data_x[i] = Vds_test_points[i-1] * 3 * 4096 / 256.0;
 543              		.loc 1 155 0 discriminator 3
 544 01c8 07F5F353 		add	r3, r7, #7776
 545 01cc 03F10C03 		add	r3, r3, #12
 546 01d0 1B68     		ldr	r3, [r3]
 547 01d2 013B     		subs	r3, r3, #1
 548 01d4 07F5F352 		add	r2, r7, #7776
 549 01d8 02F11002 		add	r2, r2, #16
 550 01dc 1344     		add	r3, r3, r2
 551 01de 13F8E83C 		ldrb	r3, [r3, #-232]	@ zero_extendqisi2
 552 01e2 1A46     		mov	r2, r3
 553 01e4 1346     		mov	r3, r2
 554 01e6 5B00     		lsls	r3, r3, #1
 555 01e8 1344     		add	r3, r3, r2
 556 01ea 1B03     		lsls	r3, r3, #12
 557 01ec 1846     		mov	r0, r3
 558 01ee FFF7FEFF 		bl	__aeabi_i2d
 559 01f2 4FF00002 		mov	r2, #0
 560 01f6 6D4B     		ldr	r3, .L76+4
 561 01f8 FFF7FEFF 		bl	__aeabi_ddiv
 562 01fc 0346     		mov	r3, r0
 563 01fe 0C46     		mov	r4, r1
 564 0200 1946     		mov	r1, r3
 565 0202 2246     		mov	r2, r4
 566 0204 07F11003 		add	r3, r7, #16
 567 0208 103B     		subs	r3, r3, #16
 568 020a 07F5F350 		add	r0, r7, #7776
 569 020e 00F10C00 		add	r0, r0, #12
 570 0212 0068     		ldr	r0, [r0]
 571 0214 C000     		lsls	r0, r0, #3
 572 0216 0344     		add	r3, r3, r0
 573 0218 C3E90012 		strd	r1, [r3]
 152:main.c        ****                 for(i=1; i < VDS_NMOS_LENGTH; i++)
 574              		.loc 1 152 0 discriminator 3
 575 021c 07F5F353 		add	r3, r7, #7776
 576 0220 03F10C03 		add	r3, r3, #12
 577 0224 1B68     		ldr	r3, [r3]
 578 0226 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 14


 579 0228 07F5F352 		add	r2, r7, #7776
 580 022c 02F10C02 		add	r2, r2, #12
 581 0230 1360     		str	r3, [r2]
 582              	.L39:
 152:main.c        ****                 for(i=1; i < VDS_NMOS_LENGTH; i++)
 583              		.loc 1 152 0 is_stmt 0 discriminator 1
 584 0232 07F5F353 		add	r3, r7, #7776
 585 0236 03F10C03 		add	r3, r3, #12
 586 023a 1B68     		ldr	r3, [r3]
 587 023c BC2B     		cmp	r3, #188
 588 023e A8DD     		ble	.L40
 156:main.c        ****                 }
 157:main.c        ****                 for(i = 0; i < CURVE_NUM; i++)
 589              		.loc 1 157 0 is_stmt 1
 590 0240 0023     		movs	r3, #0
 591 0242 07F5F352 		add	r2, r7, #7776
 592 0246 02F10C02 		add	r2, r2, #12
 593 024a 1360     		str	r3, [r2]
 594 024c 51E1     		b	.L41
 595              	.L46:
 158:main.c        ****                 {
 159:main.c        ****                     for(j = 0; j < VDS_NMOS_LENGTH; j++)
 596              		.loc 1 159 0
 597 024e 0023     		movs	r3, #0
 598 0250 07F5F352 		add	r2, r7, #7776
 599 0254 02F10802 		add	r2, r2, #8
 600 0258 1360     		str	r3, [r2]
 601 025a 37E1     		b	.L42
 602              	.L45:
 160:main.c        ****                     {
 161:main.c        ****                         Output_data_y[i][j] = single_test(Vds_test_points[j],Vgs_test_points[i]);
 603              		.loc 1 161 0
 604 025c 07F5EC52 		add	r2, r7, #7552
 605 0260 02F10802 		add	r2, r2, #8
 606 0264 07F5F353 		add	r3, r7, #7776
 607 0268 03F10803 		add	r3, r3, #8
 608 026c 1B68     		ldr	r3, [r3]
 609 026e 1344     		add	r3, r3, r2
 610 0270 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 611 0272 07F5F252 		add	r2, r7, #7744
 612 0276 02F10802 		add	r2, r2, #8
 613 027a 07F5F353 		add	r3, r7, #7776
 614 027e 03F10C03 		add	r3, r3, #12
 615 0282 1B68     		ldr	r3, [r3]
 616 0284 1344     		add	r3, r3, r2
 617 0286 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 618 0288 1946     		mov	r1, r3
 619 028a FFF7FEFF 		bl	single_test
 620 028e 0446     		mov	r4, r0
 621 0290 0D46     		mov	r5, r1
 622 0292 07F5BE62 		add	r2, r7, #1520
 623 0296 083A     		subs	r2, r2, #8
 624 0298 07F5F353 		add	r3, r7, #7776
 625 029c 03F10C03 		add	r3, r3, #12
 626 02a0 1968     		ldr	r1, [r3]
 627 02a2 0B46     		mov	r3, r1
 628 02a4 5B00     		lsls	r3, r3, #1
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 15


 629 02a6 0B44     		add	r3, r3, r1
 630 02a8 9901     		lsls	r1, r3, #6
 631 02aa C91A     		subs	r1, r1, r3
 632 02ac 07F5F353 		add	r3, r7, #7776
 633 02b0 03F10803 		add	r3, r3, #8
 634 02b4 1B68     		ldr	r3, [r3]
 635 02b6 0B44     		add	r3, r3, r1
 636 02b8 DB00     		lsls	r3, r3, #3
 637 02ba 1344     		add	r3, r3, r2
 638 02bc C3E90045 		strd	r4, [r3]
 162:main.c        ****                         if (j==0)
 639              		.loc 1 162 0
 640 02c0 07F5F353 		add	r3, r7, #7776
 641 02c4 03F10803 		add	r3, r3, #8
 642 02c8 1B68     		ldr	r3, [r3]
 643 02ca 002B     		cmp	r3, #0
 644 02cc 74D1     		bne	.L43
 163:main.c        ****                         {
 164:main.c        ****                             y_pixel_prev = (Output_data_y[i][j]/y_max_mA)*Y_RES;
 645              		.loc 1 164 0
 646 02ce 07F5BE62 		add	r2, r7, #1520
 647 02d2 083A     		subs	r2, r2, #8
 648 02d4 07F5F353 		add	r3, r7, #7776
 649 02d8 03F10C03 		add	r3, r3, #12
 650 02dc 1968     		ldr	r1, [r3]
 651 02de 0B46     		mov	r3, r1
 652 02e0 5B00     		lsls	r3, r3, #1
 653 02e2 0B44     		add	r3, r3, r1
 654 02e4 9901     		lsls	r1, r3, #6
 655 02e6 C91A     		subs	r1, r1, r3
 656 02e8 07F5F353 		add	r3, r7, #7776
 657 02ec 03F10803 		add	r3, r3, #8
 658 02f0 1B68     		ldr	r3, [r3]
 659 02f2 0B44     		add	r3, r3, r1
 660 02f4 DB00     		lsls	r3, r3, #3
 661 02f6 1344     		add	r3, r3, r2
 662 02f8 D3E90045 		ldrd	r4, [r3]
 663 02fc 07F5F353 		add	r3, r7, #7776
 664 0300 03F10403 		add	r3, r3, #4
 665 0304 B3F90030 		ldrsh	r3, [r3]
 666 0308 1846     		mov	r0, r3
 667 030a FFF7FEFF 		bl	__aeabi_i2d
 668 030e 0246     		mov	r2, r0
 669 0310 0B46     		mov	r3, r1
 670 0312 2046     		mov	r0, r4
 671 0314 2946     		mov	r1, r5
 672 0316 FFF7FEFF 		bl	__aeabi_ddiv
 673 031a 0346     		mov	r3, r0
 674 031c 0C46     		mov	r4, r1
 675 031e 1846     		mov	r0, r3
 676 0320 2146     		mov	r1, r4
 677 0322 4FF00002 		mov	r2, #0
 678 0326 224B     		ldr	r3, .L76+8
 679 0328 FFF7FEFF 		bl	__aeabi_dmul
 680 032c 0346     		mov	r3, r0
 681 032e 0C46     		mov	r4, r1
 682 0330 1846     		mov	r0, r3
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 16


 683 0332 2146     		mov	r1, r4
 684 0334 FFF7FEFF 		bl	__aeabi_d2iz
 685 0338 0346     		mov	r3, r0
 686 033a 07F5F252 		add	r2, r7, #7744
 687 033e 02F11A02 		add	r2, r2, #26
 688 0342 1380     		strh	r3, [r2]	@ movhi
 165:main.c        ****                             x_pixel_prev = (Output_data_x[j]/x_max_mV)*X_RES;
 689              		.loc 1 165 0
 690 0344 07F11003 		add	r3, r7, #16
 691 0348 103B     		subs	r3, r3, #16
 692 034a 07F5F352 		add	r2, r7, #7776
 693 034e 02F10802 		add	r2, r2, #8
 694 0352 1268     		ldr	r2, [r2]
 695 0354 D200     		lsls	r2, r2, #3
 696 0356 1344     		add	r3, r3, r2
 697 0358 D3E90045 		ldrd	r4, [r3]
 698 035c 07F5F353 		add	r3, r7, #7776
 699 0360 03F10203 		add	r3, r3, #2
 700 0364 B3F90030 		ldrsh	r3, [r3]
 701 0368 1846     		mov	r0, r3
 702 036a FFF7FEFF 		bl	__aeabi_i2d
 703 036e 0246     		mov	r2, r0
 704 0370 0B46     		mov	r3, r1
 705 0372 2046     		mov	r0, r4
 706 0374 2946     		mov	r1, r5
 707 0376 FFF7FEFF 		bl	__aeabi_ddiv
 708 037a 0346     		mov	r3, r0
 709 037c 0C46     		mov	r4, r1
 710 037e 1846     		mov	r0, r3
 711 0380 2146     		mov	r1, r4
 712 0382 4FF00002 		mov	r2, #0
 713 0386 0B4B     		ldr	r3, .L76+12
 714 0388 FFF7FEFF 		bl	__aeabi_dmul
 715 038c 0346     		mov	r3, r0
 716 038e 0C46     		mov	r4, r1
 717 0390 1846     		mov	r0, r3
 718 0392 2146     		mov	r1, r4
 719 0394 FFF7FEFF 		bl	__aeabi_d2iz
 720 0398 0346     		mov	r3, r0
 721 039a 07F5F252 		add	r2, r7, #7744
 722 039e 02F11802 		add	r2, r2, #24
 723 03a2 1380     		strh	r3, [r2]	@ movhi
 724 03a4 87E0     		b	.L44
 725              	.L77:
 726 03a6 00BF     		.align	2
 727              	.L76:
 728 03a8 56555555 		.word	1431655766
 729 03ac 00007040 		.word	1081081856
 730 03b0 00006E40 		.word	1080950784
 731 03b4 00007440 		.word	1081344000
 732              	.L43:
 166:main.c        ****                         }
 167:main.c        ****                         else
 168:main.c        ****                         {
 169:main.c        ****                             y_pixel = (Output_data_y[i][j]/y_max_mA)*Y_RES;
 733              		.loc 1 169 0
 734 03b8 07F5BE62 		add	r2, r7, #1520
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 17


 735 03bc 083A     		subs	r2, r2, #8
 736 03be 07F5F353 		add	r3, r7, #7776
 737 03c2 03F10C03 		add	r3, r3, #12
 738 03c6 1968     		ldr	r1, [r3]
 739 03c8 0B46     		mov	r3, r1
 740 03ca 5B00     		lsls	r3, r3, #1
 741 03cc 0B44     		add	r3, r3, r1
 742 03ce 9901     		lsls	r1, r3, #6
 743 03d0 C91A     		subs	r1, r1, r3
 744 03d2 07F5F353 		add	r3, r7, #7776
 745 03d6 03F10803 		add	r3, r3, #8
 746 03da 1B68     		ldr	r3, [r3]
 747 03dc 0B44     		add	r3, r3, r1
 748 03de DB00     		lsls	r3, r3, #3
 749 03e0 1344     		add	r3, r3, r2
 750 03e2 D3E90045 		ldrd	r4, [r3]
 751 03e6 07F5F353 		add	r3, r7, #7776
 752 03ea 03F10403 		add	r3, r3, #4
 753 03ee B3F90030 		ldrsh	r3, [r3]
 754 03f2 1846     		mov	r0, r3
 755 03f4 FFF7FEFF 		bl	__aeabi_i2d
 756 03f8 0246     		mov	r2, r0
 757 03fa 0B46     		mov	r3, r1
 758 03fc 2046     		mov	r0, r4
 759 03fe 2946     		mov	r1, r5
 760 0400 FFF7FEFF 		bl	__aeabi_ddiv
 761 0404 0346     		mov	r3, r0
 762 0406 0C46     		mov	r4, r1
 763 0408 1846     		mov	r0, r3
 764 040a 2146     		mov	r1, r4
 765 040c 4FF00002 		mov	r2, #0
 766 0410 B34B     		ldr	r3, .L78+8
 767 0412 FFF7FEFF 		bl	__aeabi_dmul
 768 0416 0346     		mov	r3, r0
 769 0418 0C46     		mov	r4, r1
 770 041a 1846     		mov	r0, r3
 771 041c 2146     		mov	r1, r4
 772 041e FFF7FEFF 		bl	__aeabi_d2iz
 773 0422 0346     		mov	r3, r0
 774 0424 07F5F252 		add	r2, r7, #7744
 775 0428 02F11602 		add	r2, r2, #22
 776 042c 1380     		strh	r3, [r2]	@ movhi
 170:main.c        ****                             x_pixel = (Output_data_x[j]/x_max_mV)*X_RES;
 777              		.loc 1 170 0
 778 042e 07F11003 		add	r3, r7, #16
 779 0432 103B     		subs	r3, r3, #16
 780 0434 07F5F352 		add	r2, r7, #7776
 781 0438 02F10802 		add	r2, r2, #8
 782 043c 1268     		ldr	r2, [r2]
 783 043e D200     		lsls	r2, r2, #3
 784 0440 1344     		add	r3, r3, r2
 785 0442 D3E90045 		ldrd	r4, [r3]
 786 0446 07F5F353 		add	r3, r7, #7776
 787 044a 03F10203 		add	r3, r3, #2
 788 044e B3F90030 		ldrsh	r3, [r3]
 789 0452 1846     		mov	r0, r3
 790 0454 FFF7FEFF 		bl	__aeabi_i2d
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 18


 791 0458 0246     		mov	r2, r0
 792 045a 0B46     		mov	r3, r1
 793 045c 2046     		mov	r0, r4
 794 045e 2946     		mov	r1, r5
 795 0460 FFF7FEFF 		bl	__aeabi_ddiv
 796 0464 0346     		mov	r3, r0
 797 0466 0C46     		mov	r4, r1
 798 0468 1846     		mov	r0, r3
 799 046a 2146     		mov	r1, r4
 800 046c 4FF00002 		mov	r2, #0
 801 0470 9C4B     		ldr	r3, .L78+12
 802 0472 FFF7FEFF 		bl	__aeabi_dmul
 803 0476 0346     		mov	r3, r0
 804 0478 0C46     		mov	r4, r1
 805 047a 1846     		mov	r0, r3
 806 047c 2146     		mov	r1, r4
 807 047e FFF7FEFF 		bl	__aeabi_d2iz
 808 0482 0346     		mov	r3, r0
 809 0484 07F5F252 		add	r2, r7, #7744
 810 0488 02F11402 		add	r2, r2, #20
 811 048c 1380     		strh	r3, [r2]	@ movhi
 171:main.c        ****                             //draw_line(x_pixel_prev,y_pixel_prev,x_pixel,y_pixel,color[i]);
 172:main.c        ****                             y_pixel_prev = y_pixel;
 812              		.loc 1 172 0
 813 048e 07F5F253 		add	r3, r7, #7744
 814 0492 03F11603 		add	r3, r3, #22
 815 0496 1B88     		ldrh	r3, [r3]	@ movhi
 816 0498 07F5F252 		add	r2, r7, #7744
 817 049c 02F11A02 		add	r2, r2, #26
 818 04a0 1380     		strh	r3, [r2]	@ movhi
 173:main.c        ****                             x_pixel_prev = x_pixel;
 819              		.loc 1 173 0
 820 04a2 07F5F253 		add	r3, r7, #7744
 821 04a6 03F11403 		add	r3, r3, #20
 822 04aa 1B88     		ldrh	r3, [r3]	@ movhi
 823 04ac 07F5F252 		add	r2, r7, #7744
 824 04b0 02F11802 		add	r2, r2, #24
 825 04b4 1380     		strh	r3, [r2]	@ movhi
 826              	.L44:
 159:main.c        ****                     {
 827              		.loc 1 159 0 discriminator 2
 828 04b6 07F5F353 		add	r3, r7, #7776
 829 04ba 03F10803 		add	r3, r3, #8
 830 04be 1B68     		ldr	r3, [r3]
 831 04c0 0133     		adds	r3, r3, #1
 832 04c2 07F5F352 		add	r2, r7, #7776
 833 04c6 02F10802 		add	r2, r2, #8
 834 04ca 1360     		str	r3, [r2]
 835              	.L42:
 159:main.c        ****                     {
 836              		.loc 1 159 0 is_stmt 0 discriminator 1
 837 04cc 07F5F353 		add	r3, r7, #7776
 838 04d0 03F10803 		add	r3, r3, #8
 839 04d4 1B68     		ldr	r3, [r3]
 840 04d6 BC2B     		cmp	r3, #188
 841 04d8 7FF7C0AE 		ble	.L45
 157:main.c        ****                 {
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 19


 842              		.loc 1 157 0 is_stmt 1 discriminator 2
 843 04dc 07F5F353 		add	r3, r7, #7776
 844 04e0 03F10C03 		add	r3, r3, #12
 845 04e4 1B68     		ldr	r3, [r3]
 846 04e6 0133     		adds	r3, r3, #1
 847 04e8 07F5F352 		add	r2, r7, #7776
 848 04ec 02F10C02 		add	r2, r2, #12
 849 04f0 1360     		str	r3, [r2]
 850              	.L41:
 157:main.c        ****                 {
 851              		.loc 1 157 0 is_stmt 0 discriminator 1
 852 04f2 07F5F353 		add	r3, r7, #7776
 853 04f6 03F10C03 		add	r3, r3, #12
 854 04fa 1B68     		ldr	r3, [r3]
 855 04fc 032B     		cmp	r3, #3
 856 04fe 7FF7A6AE 		ble	.L46
 174:main.c        ****                         }
 175:main.c        ****                     }
 176:main.c        ****                 }
 177:main.c        ****                 break;
 857              		.loc 1 177 0 is_stmt 1
 858 0502 D5E3     		b	.L30
 859              	.L33:
 178:main.c        ****             case 1:
 179:main.c        ****                 //NPN input
 180:main.c        ****                 Vth =  126; //vgs_th_find(VDAC_G_B_MAX,VDAC_N_1_VOLT);
 860              		.loc 1 180 0
 861 0504 7E23     		movs	r3, #126
 862 0506 07F5F352 		add	r2, r7, #7776
 863 050a 1380     		strh	r3, [r2]	@ movhi
 181:main.c        ****                 if (Vth < 0)
 182:main.c        ****                 {
 183:main.c        ****                     //Print error function
 184:main.c        ****                 }
 185:main.c        ****                 Vgs_max = 188;  //vgs_max_id_find(Vth,VDAC_D_C_MAX,VDAC_G_B_MAX);
 864              		.loc 1 185 0
 865 050c BC23     		movs	r3, #188
 866 050e 07F5F252 		add	r2, r7, #7744
 867 0512 02F11E02 		add	r2, r2, #30
 868 0516 1380     		strh	r3, [r2]	@ movhi
 186:main.c        ****                 Vgs_step = (Vgs_max - Vth)/CURVE_NUM; //Creating the step size for linearlly spaced
 869              		.loc 1 186 0
 870 0518 07F5F253 		add	r3, r7, #7744
 871 051c 03F11E03 		add	r3, r3, #30
 872 0520 B3F90020 		ldrsh	r2, [r3]
 873 0524 07F5F353 		add	r3, r7, #7776
 874 0528 B3F90030 		ldrsh	r3, [r3]
 875 052c D31A     		subs	r3, r2, r3
 876 052e 002B     		cmp	r3, #0
 877 0530 00DA     		bge	.L47
 878 0532 0333     		adds	r3, r3, #3
 879              	.L47:
 880 0534 9B10     		asrs	r3, r3, #2
 881 0536 07F5F252 		add	r2, r7, #7744
 882 053a 02F11D02 		add	r2, r2, #29
 883 053e 1370     		strb	r3, [r2]
 187:main.c        ****                 Vgs_test_points[0] = Vth;
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 20


 884              		.loc 1 187 0
 885 0540 07F5F353 		add	r3, r7, #7776
 886 0544 1B88     		ldrh	r3, [r3]	@ movhi
 887 0546 DBB2     		uxtb	r3, r3
 888 0548 07F5F252 		add	r2, r7, #7744
 889 054c 02F10802 		add	r2, r2, #8
 890 0550 1370     		strb	r3, [r2]
 188:main.c        ****                 for (i=1; i < CURVE_NUM; i++)
 891              		.loc 1 188 0
 892 0552 0123     		movs	r3, #1
 893 0554 07F5F352 		add	r2, r7, #7776
 894 0558 02F10C02 		add	r2, r2, #12
 895 055c 1360     		str	r3, [r2]
 896 055e 2AE0     		b	.L48
 897              	.L49:
 189:main.c        ****                 {
 190:main.c        ****                     Vgs_test_points[i] = (Vgs_test_points[i-1] + Vgs_step);
 898              		.loc 1 190 0 discriminator 3
 899 0560 07F5F353 		add	r3, r7, #7776
 900 0564 03F10C03 		add	r3, r3, #12
 901 0568 1B68     		ldr	r3, [r3]
 902 056a 013B     		subs	r3, r3, #1
 903 056c 07F5F352 		add	r2, r7, #7776
 904 0570 02F11002 		add	r2, r2, #16
 905 0574 1344     		add	r3, r3, r2
 906 0576 13F8282C 		ldrb	r2, [r3, #-40]	@ zero_extendqisi2
 907 057a 07F5F253 		add	r3, r7, #7744
 908 057e 03F11D03 		add	r3, r3, #29
 909 0582 1B78     		ldrb	r3, [r3]
 910 0584 1344     		add	r3, r3, r2
 911 0586 D9B2     		uxtb	r1, r3
 912 0588 07F5F252 		add	r2, r7, #7744
 913 058c 02F10802 		add	r2, r2, #8
 914 0590 07F5F353 		add	r3, r7, #7776
 915 0594 03F10C03 		add	r3, r3, #12
 916 0598 1B68     		ldr	r3, [r3]
 917 059a 1344     		add	r3, r3, r2
 918 059c 0A46     		mov	r2, r1
 919 059e 1A70     		strb	r2, [r3]
 188:main.c        ****                 for (i=1; i < CURVE_NUM; i++)
 920              		.loc 1 188 0 discriminator 3
 921 05a0 07F5F353 		add	r3, r7, #7776
 922 05a4 03F10C03 		add	r3, r3, #12
 923 05a8 1B68     		ldr	r3, [r3]
 924 05aa 0133     		adds	r3, r3, #1
 925 05ac 07F5F352 		add	r2, r7, #7776
 926 05b0 02F10C02 		add	r2, r2, #12
 927 05b4 1360     		str	r3, [r2]
 928              	.L48:
 188:main.c        ****                 for (i=1; i < CURVE_NUM; i++)
 929              		.loc 1 188 0 is_stmt 0 discriminator 1
 930 05b6 07F5F353 		add	r3, r7, #7776
 931 05ba 03F10C03 		add	r3, r3, #12
 932 05be 1B68     		ldr	r3, [r3]
 933 05c0 032B     		cmp	r3, #3
 934 05c2 CDDD     		ble	.L49
 191:main.c        ****                 }
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 21


 192:main.c        ****                 Vds_test_points[0] = 0;
 935              		.loc 1 192 0 is_stmt 1
 936 05c4 0023     		movs	r3, #0
 937 05c6 07F5EC52 		add	r2, r7, #7552
 938 05ca 02F10802 		add	r2, r2, #8
 939 05ce 1370     		strb	r3, [r2]
 193:main.c        ****                 Output_data_x[0] = 0;
 940              		.loc 1 193 0
 941 05d0 07F11003 		add	r3, r7, #16
 942 05d4 103B     		subs	r3, r3, #16
 943 05d6 4FF00001 		mov	r1, #0
 944 05da 4FF00002 		mov	r2, #0
 945 05de C3E90012 		strd	r1, [r3]
 194:main.c        ****                 for(i=1; i < VDS_NMOS_LENGTH; i++)
 946              		.loc 1 194 0
 947 05e2 0123     		movs	r3, #1
 948 05e4 07F5F352 		add	r2, r7, #7776
 949 05e8 02F10C02 		add	r2, r2, #12
 950 05ec 1360     		str	r3, [r2]
 951 05ee 5CE0     		b	.L50
 952              	.L51:
 195:main.c        ****                 {
 196:main.c        ****                     Vds_test_points[i] = Vds_test_points[i-1] + VD_STEP_NMOS;
 953              		.loc 1 196 0 discriminator 3
 954 05f0 07F5F353 		add	r3, r7, #7776
 955 05f4 03F10C03 		add	r3, r3, #12
 956 05f8 1B68     		ldr	r3, [r3]
 957 05fa 013B     		subs	r3, r3, #1
 958 05fc 07F5F352 		add	r2, r7, #7776
 959 0600 02F11002 		add	r2, r2, #16
 960 0604 1344     		add	r3, r3, r2
 961 0606 13F8E83C 		ldrb	r3, [r3, #-232]	@ zero_extendqisi2
 962 060a 0133     		adds	r3, r3, #1
 963 060c D9B2     		uxtb	r1, r3
 964 060e 07F5EC52 		add	r2, r7, #7552
 965 0612 02F10802 		add	r2, r2, #8
 966 0616 07F5F353 		add	r3, r7, #7776
 967 061a 03F10C03 		add	r3, r3, #12
 968 061e 1B68     		ldr	r3, [r3]
 969 0620 1344     		add	r3, r3, r2
 970 0622 0A46     		mov	r2, r1
 971 0624 1A70     		strb	r2, [r3]
 197:main.c        ****                     Output_data_x[i] = Vds_test_points[i-1]/2560.0 * 3.0 * 4.096; //Translates VDAC
 972              		.loc 1 197 0 discriminator 3
 973 0626 07F5F353 		add	r3, r7, #7776
 974 062a 03F10C03 		add	r3, r3, #12
 975 062e 1B68     		ldr	r3, [r3]
 976 0630 013B     		subs	r3, r3, #1
 977 0632 07F5F352 		add	r2, r7, #7776
 978 0636 02F11002 		add	r2, r2, #16
 979 063a 1344     		add	r3, r3, r2
 980 063c 13F8E83C 		ldrb	r3, [r3, #-232]	@ zero_extendqisi2
 981 0640 1846     		mov	r0, r3
 982 0642 FFF7FEFF 		bl	__aeabi_i2d
 983 0646 4FF00002 		mov	r2, #0
 984 064a 274B     		ldr	r3, .L78+16
 985 064c FFF7FEFF 		bl	__aeabi_ddiv
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 22


 986 0650 0346     		mov	r3, r0
 987 0652 0C46     		mov	r4, r1
 988 0654 1846     		mov	r0, r3
 989 0656 2146     		mov	r1, r4
 990 0658 4FF00002 		mov	r2, #0
 991 065c 234B     		ldr	r3, .L78+20
 992 065e FFF7FEFF 		bl	__aeabi_dmul
 993 0662 0346     		mov	r3, r0
 994 0664 0C46     		mov	r4, r1
 995 0666 1846     		mov	r0, r3
 996 0668 2146     		mov	r1, r4
 997 066a 1BA3     		adr	r3, .L78
 998 066c D3E90023 		ldrd	r2, [r3]
 999 0670 FFF7FEFF 		bl	__aeabi_dmul
 1000 0674 0346     		mov	r3, r0
 1001 0676 0C46     		mov	r4, r1
 1002 0678 1946     		mov	r1, r3
 1003 067a 2246     		mov	r2, r4
 1004 067c 07F11003 		add	r3, r7, #16
 1005 0680 103B     		subs	r3, r3, #16
 1006 0682 07F5F350 		add	r0, r7, #7776
 1007 0686 00F10C00 		add	r0, r0, #12
 1008 068a 0068     		ldr	r0, [r0]
 1009 068c C000     		lsls	r0, r0, #3
 1010 068e 0344     		add	r3, r3, r0
 1011 0690 C3E90012 		strd	r1, [r3]
 194:main.c        ****                 for(i=1; i < VDS_NMOS_LENGTH; i++)
 1012              		.loc 1 194 0 discriminator 3
 1013 0694 07F5F353 		add	r3, r7, #7776
 1014 0698 03F10C03 		add	r3, r3, #12
 1015 069c 1B68     		ldr	r3, [r3]
 1016 069e 0133     		adds	r3, r3, #1
 1017 06a0 07F5F352 		add	r2, r7, #7776
 1018 06a4 02F10C02 		add	r2, r2, #12
 1019 06a8 1360     		str	r3, [r2]
 1020              	.L50:
 194:main.c        ****                 for(i=1; i < VDS_NMOS_LENGTH; i++)
 1021              		.loc 1 194 0 is_stmt 0 discriminator 1
 1022 06aa 07F5F353 		add	r3, r7, #7776
 1023 06ae 03F10C03 		add	r3, r3, #12
 1024 06b2 1B68     		ldr	r3, [r3]
 1025 06b4 BC2B     		cmp	r3, #188
 1026 06b6 9BDD     		ble	.L51
 198:main.c        ****                 }
 199:main.c        ****                 for(i = 0; i < CURVE_NUM; i++)
 1027              		.loc 1 199 0 is_stmt 1
 1028 06b8 0023     		movs	r3, #0
 1029 06ba 07F5F352 		add	r2, r7, #7776
 1030 06be 02F10C02 		add	r2, r2, #12
 1031 06c2 1360     		str	r3, [r2]
 1032 06c4 63E0     		b	.L52
 1033              	.L55:
 200:main.c        ****                 {
 201:main.c        ****                     for(j = 0; j < VDS_NMOS_LENGTH; j++)
 1034              		.loc 1 201 0
 1035 06c6 0023     		movs	r3, #0
 1036 06c8 07F5F352 		add	r2, r7, #7776
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 23


 1037 06cc 02F10802 		add	r2, r2, #8
 1038 06d0 1360     		str	r3, [r2]
 1039 06d2 4AE0     		b	.L53
 1040              	.L79:
 1041 06d4 AFF30080 		.align	3
 1042              	.L78:
 1043 06d8 FCA9F1D2 		.word	-755914244
 1044 06dc 4D621040 		.word	1074815565
 1045 06e0 00006E40 		.word	1080950784
 1046 06e4 00007440 		.word	1081344000
 1047 06e8 0000A440 		.word	1084489728
 1048 06ec 00000840 		.word	1074266112
 1049              	.L54:
 202:main.c        ****                     {
 203:main.c        ****                         Output_data_y[i][j] = single_test(Vds_test_points[j],Vgs_test_points[i]);
 1050              		.loc 1 203 0 discriminator 3
 1051 06f0 07F5EC52 		add	r2, r7, #7552
 1052 06f4 02F10802 		add	r2, r2, #8
 1053 06f8 07F5F353 		add	r3, r7, #7776
 1054 06fc 03F10803 		add	r3, r3, #8
 1055 0700 1B68     		ldr	r3, [r3]
 1056 0702 1344     		add	r3, r3, r2
 1057 0704 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1058 0706 07F5F252 		add	r2, r7, #7744
 1059 070a 02F10802 		add	r2, r2, #8
 1060 070e 07F5F353 		add	r3, r7, #7776
 1061 0712 03F10C03 		add	r3, r3, #12
 1062 0716 1B68     		ldr	r3, [r3]
 1063 0718 1344     		add	r3, r3, r2
 1064 071a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1065 071c 1946     		mov	r1, r3
 1066 071e FFF7FEFF 		bl	single_test
 1067 0722 0446     		mov	r4, r0
 1068 0724 0D46     		mov	r5, r1
 1069 0726 07F5BE62 		add	r2, r7, #1520
 1070 072a 083A     		subs	r2, r2, #8
 1071 072c 07F5F353 		add	r3, r7, #7776
 1072 0730 03F10C03 		add	r3, r3, #12
 1073 0734 1968     		ldr	r1, [r3]
 1074 0736 0B46     		mov	r3, r1
 1075 0738 5B00     		lsls	r3, r3, #1
 1076 073a 0B44     		add	r3, r3, r1
 1077 073c 9901     		lsls	r1, r3, #6
 1078 073e C91A     		subs	r1, r1, r3
 1079 0740 07F5F353 		add	r3, r7, #7776
 1080 0744 03F10803 		add	r3, r3, #8
 1081 0748 1B68     		ldr	r3, [r3]
 1082 074a 0B44     		add	r3, r3, r1
 1083 074c DB00     		lsls	r3, r3, #3
 1084 074e 1344     		add	r3, r3, r2
 1085 0750 C3E90045 		strd	r4, [r3]
 201:main.c        ****                     {
 1086              		.loc 1 201 0 discriminator 3
 1087 0754 07F5F353 		add	r3, r7, #7776
 1088 0758 03F10803 		add	r3, r3, #8
 1089 075c 1B68     		ldr	r3, [r3]
 1090 075e 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 24


 1091 0760 07F5F352 		add	r2, r7, #7776
 1092 0764 02F10802 		add	r2, r2, #8
 1093 0768 1360     		str	r3, [r2]
 1094              	.L53:
 201:main.c        ****                     {
 1095              		.loc 1 201 0 is_stmt 0 discriminator 1
 1096 076a 07F5F353 		add	r3, r7, #7776
 1097 076e 03F10803 		add	r3, r3, #8
 1098 0772 1B68     		ldr	r3, [r3]
 1099 0774 BC2B     		cmp	r3, #188
 1100 0776 BBDD     		ble	.L54
 199:main.c        ****                 {
 1101              		.loc 1 199 0 is_stmt 1 discriminator 2
 1102 0778 07F5F353 		add	r3, r7, #7776
 1103 077c 03F10C03 		add	r3, r3, #12
 1104 0780 1B68     		ldr	r3, [r3]
 1105 0782 0133     		adds	r3, r3, #1
 1106 0784 07F5F352 		add	r2, r7, #7776
 1107 0788 02F10C02 		add	r2, r2, #12
 1108 078c 1360     		str	r3, [r2]
 1109              	.L52:
 199:main.c        ****                 {
 1110              		.loc 1 199 0 is_stmt 0 discriminator 1
 1111 078e 07F5F353 		add	r3, r7, #7776
 1112 0792 03F10C03 		add	r3, r3, #12
 1113 0796 1B68     		ldr	r3, [r3]
 1114 0798 032B     		cmp	r3, #3
 1115 079a 94DD     		ble	.L55
 204:main.c        ****                     }
 205:main.c        ****                 }
 206:main.c        ****                 break;
 1116              		.loc 1 206 0 is_stmt 1
 1117 079c 88E2     		b	.L30
 1118              	.L34:
 207:main.c        ****             case 2:
 208:main.c        ****                 //PMOS input
 209:main.c        ****                 Vth =  126; //vgs_th_find(VDAC_G_B_MAX,VDAC_P_1_VOLT);
 1119              		.loc 1 209 0
 1120 079e 7E23     		movs	r3, #126
 1121 07a0 07F5F352 		add	r2, r7, #7776
 1122 07a4 1380     		strh	r3, [r2]	@ movhi
 210:main.c        ****                 if (Vth < 0)
 211:main.c        ****                 {
 212:main.c        ****                     //Print error function
 213:main.c        ****                 }
 214:main.c        ****                 Vgs_max = 188;  //vgs_max_id_find(Vth,VDAC_D_C_MAX,VDAC_G_B_MAX);
 1123              		.loc 1 214 0
 1124 07a6 BC23     		movs	r3, #188
 1125 07a8 07F5F252 		add	r2, r7, #7744
 1126 07ac 02F11E02 		add	r2, r2, #30
 1127 07b0 1380     		strh	r3, [r2]	@ movhi
 215:main.c        ****                 Vgs_step = (Vgs_max - Vth)/CURVE_NUM; //Creating the step size for linearlly spaced
 1128              		.loc 1 215 0
 1129 07b2 07F5F253 		add	r3, r7, #7744
 1130 07b6 03F11E03 		add	r3, r3, #30
 1131 07ba B3F90020 		ldrsh	r2, [r3]
 1132 07be 07F5F353 		add	r3, r7, #7776
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 25


 1133 07c2 B3F90030 		ldrsh	r3, [r3]
 1134 07c6 D31A     		subs	r3, r2, r3
 1135 07c8 002B     		cmp	r3, #0
 1136 07ca 00DA     		bge	.L56
 1137 07cc 0333     		adds	r3, r3, #3
 1138              	.L56:
 1139 07ce 9B10     		asrs	r3, r3, #2
 1140 07d0 07F5F252 		add	r2, r7, #7744
 1141 07d4 02F11D02 		add	r2, r2, #29
 1142 07d8 1370     		strb	r3, [r2]
 216:main.c        ****                 Vgs_test_points[0] = Vth;
 1143              		.loc 1 216 0
 1144 07da 07F5F353 		add	r3, r7, #7776
 1145 07de 1B88     		ldrh	r3, [r3]	@ movhi
 1146 07e0 DBB2     		uxtb	r3, r3
 1147 07e2 07F5F252 		add	r2, r7, #7744
 1148 07e6 02F10802 		add	r2, r2, #8
 1149 07ea 1370     		strb	r3, [r2]
 217:main.c        ****                 for (i=1; i < CURVE_NUM; i++)
 1150              		.loc 1 217 0
 1151 07ec 0123     		movs	r3, #1
 1152 07ee 07F5F352 		add	r2, r7, #7776
 1153 07f2 02F10C02 		add	r2, r2, #12
 1154 07f6 1360     		str	r3, [r2]
 1155 07f8 2AE0     		b	.L57
 1156              	.L58:
 218:main.c        ****                 {
 219:main.c        ****                     Vgs_test_points[i] = (Vgs_test_points[i-1] + Vgs_step);
 1157              		.loc 1 219 0 discriminator 3
 1158 07fa 07F5F353 		add	r3, r7, #7776
 1159 07fe 03F10C03 		add	r3, r3, #12
 1160 0802 1B68     		ldr	r3, [r3]
 1161 0804 013B     		subs	r3, r3, #1
 1162 0806 07F5F352 		add	r2, r7, #7776
 1163 080a 02F11002 		add	r2, r2, #16
 1164 080e 1344     		add	r3, r3, r2
 1165 0810 13F8282C 		ldrb	r2, [r3, #-40]	@ zero_extendqisi2
 1166 0814 07F5F253 		add	r3, r7, #7744
 1167 0818 03F11D03 		add	r3, r3, #29
 1168 081c 1B78     		ldrb	r3, [r3]
 1169 081e 1344     		add	r3, r3, r2
 1170 0820 D9B2     		uxtb	r1, r3
 1171 0822 07F5F252 		add	r2, r7, #7744
 1172 0826 02F10802 		add	r2, r2, #8
 1173 082a 07F5F353 		add	r3, r7, #7776
 1174 082e 03F10C03 		add	r3, r3, #12
 1175 0832 1B68     		ldr	r3, [r3]
 1176 0834 1344     		add	r3, r3, r2
 1177 0836 0A46     		mov	r2, r1
 1178 0838 1A70     		strb	r2, [r3]
 217:main.c        ****                 for (i=1; i < CURVE_NUM; i++)
 1179              		.loc 1 217 0 discriminator 3
 1180 083a 07F5F353 		add	r3, r7, #7776
 1181 083e 03F10C03 		add	r3, r3, #12
 1182 0842 1B68     		ldr	r3, [r3]
 1183 0844 0133     		adds	r3, r3, #1
 1184 0846 07F5F352 		add	r2, r7, #7776
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 26


 1185 084a 02F10C02 		add	r2, r2, #12
 1186 084e 1360     		str	r3, [r2]
 1187              	.L57:
 217:main.c        ****                 for (i=1; i < CURVE_NUM; i++)
 1188              		.loc 1 217 0 is_stmt 0 discriminator 1
 1189 0850 07F5F353 		add	r3, r7, #7776
 1190 0854 03F10C03 		add	r3, r3, #12
 1191 0858 1B68     		ldr	r3, [r3]
 1192 085a 032B     		cmp	r3, #3
 1193 085c CDDD     		ble	.L58
 220:main.c        ****                 }
 221:main.c        ****                 Vds_test_points[0] = 0;
 1194              		.loc 1 221 0 is_stmt 1
 1195 085e 0023     		movs	r3, #0
 1196 0860 07F5EC52 		add	r2, r7, #7552
 1197 0864 02F10802 		add	r2, r2, #8
 1198 0868 1370     		strb	r3, [r2]
 222:main.c        ****                 Output_data_x[0] = 0;
 1199              		.loc 1 222 0
 1200 086a 07F11003 		add	r3, r7, #16
 1201 086e 103B     		subs	r3, r3, #16
 1202 0870 4FF00001 		mov	r1, #0
 1203 0874 4FF00002 		mov	r2, #0
 1204 0878 C3E90012 		strd	r1, [r3]
 223:main.c        ****                 for(i=1; i < VDS_NMOS_LENGTH; i++)
 1205              		.loc 1 223 0
 1206 087c 0123     		movs	r3, #1
 1207 087e 07F5F352 		add	r2, r7, #7776
 1208 0882 02F10C02 		add	r2, r2, #12
 1209 0886 1360     		str	r3, [r2]
 1210 0888 5CE0     		b	.L59
 1211              	.L60:
 224:main.c        ****                 {
 225:main.c        ****                     Vds_test_points[i] = Vds_test_points[i-1] + VD_STEP_NMOS;
 1212              		.loc 1 225 0 discriminator 3
 1213 088a 07F5F353 		add	r3, r7, #7776
 1214 088e 03F10C03 		add	r3, r3, #12
 1215 0892 1B68     		ldr	r3, [r3]
 1216 0894 013B     		subs	r3, r3, #1
 1217 0896 07F5F352 		add	r2, r7, #7776
 1218 089a 02F11002 		add	r2, r2, #16
 1219 089e 1344     		add	r3, r3, r2
 1220 08a0 13F8E83C 		ldrb	r3, [r3, #-232]	@ zero_extendqisi2
 1221 08a4 0133     		adds	r3, r3, #1
 1222 08a6 D9B2     		uxtb	r1, r3
 1223 08a8 07F5EC52 		add	r2, r7, #7552
 1224 08ac 02F10802 		add	r2, r2, #8
 1225 08b0 07F5F353 		add	r3, r7, #7776
 1226 08b4 03F10C03 		add	r3, r3, #12
 1227 08b8 1B68     		ldr	r3, [r3]
 1228 08ba 1344     		add	r3, r3, r2
 1229 08bc 0A46     		mov	r2, r1
 1230 08be 1A70     		strb	r2, [r3]
 226:main.c        ****                     Output_data_x[i] = Vds_test_points[i-1]/2560.0 * 3.0 * 4.096; //Translates VDAC
 1231              		.loc 1 226 0 discriminator 3
 1232 08c0 07F5F353 		add	r3, r7, #7776
 1233 08c4 03F10C03 		add	r3, r3, #12
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 27


 1234 08c8 1B68     		ldr	r3, [r3]
 1235 08ca 013B     		subs	r3, r3, #1
 1236 08cc 07F5F352 		add	r2, r7, #7776
 1237 08d0 02F11002 		add	r2, r2, #16
 1238 08d4 1344     		add	r3, r3, r2
 1239 08d6 13F8E83C 		ldrb	r3, [r3, #-232]	@ zero_extendqisi2
 1240 08da 1846     		mov	r0, r3
 1241 08dc FFF7FEFF 		bl	__aeabi_i2d
 1242 08e0 4FF00002 		mov	r2, #0
 1243 08e4 C44B     		ldr	r3, .L80+8
 1244 08e6 FFF7FEFF 		bl	__aeabi_ddiv
 1245 08ea 0346     		mov	r3, r0
 1246 08ec 0C46     		mov	r4, r1
 1247 08ee 1846     		mov	r0, r3
 1248 08f0 2146     		mov	r1, r4
 1249 08f2 4FF00002 		mov	r2, #0
 1250 08f6 C14B     		ldr	r3, .L80+12
 1251 08f8 FFF7FEFF 		bl	__aeabi_dmul
 1252 08fc 0346     		mov	r3, r0
 1253 08fe 0C46     		mov	r4, r1
 1254 0900 1846     		mov	r0, r3
 1255 0902 2146     		mov	r1, r4
 1256 0904 BAA3     		adr	r3, .L80
 1257 0906 D3E90023 		ldrd	r2, [r3]
 1258 090a FFF7FEFF 		bl	__aeabi_dmul
 1259 090e 0346     		mov	r3, r0
 1260 0910 0C46     		mov	r4, r1
 1261 0912 1946     		mov	r1, r3
 1262 0914 2246     		mov	r2, r4
 1263 0916 07F11003 		add	r3, r7, #16
 1264 091a 103B     		subs	r3, r3, #16
 1265 091c 07F5F350 		add	r0, r7, #7776
 1266 0920 00F10C00 		add	r0, r0, #12
 1267 0924 0068     		ldr	r0, [r0]
 1268 0926 C000     		lsls	r0, r0, #3
 1269 0928 0344     		add	r3, r3, r0
 1270 092a C3E90012 		strd	r1, [r3]
 223:main.c        ****                 for(i=1; i < VDS_NMOS_LENGTH; i++)
 1271              		.loc 1 223 0 discriminator 3
 1272 092e 07F5F353 		add	r3, r7, #7776
 1273 0932 03F10C03 		add	r3, r3, #12
 1274 0936 1B68     		ldr	r3, [r3]
 1275 0938 0133     		adds	r3, r3, #1
 1276 093a 07F5F352 		add	r2, r7, #7776
 1277 093e 02F10C02 		add	r2, r2, #12
 1278 0942 1360     		str	r3, [r2]
 1279              	.L59:
 223:main.c        ****                 for(i=1; i < VDS_NMOS_LENGTH; i++)
 1280              		.loc 1 223 0 is_stmt 0 discriminator 1
 1281 0944 07F5F353 		add	r3, r7, #7776
 1282 0948 03F10C03 		add	r3, r3, #12
 1283 094c 1B68     		ldr	r3, [r3]
 1284 094e BC2B     		cmp	r3, #188
 1285 0950 9BDD     		ble	.L60
 227:main.c        ****                 }
 228:main.c        ****                 for(i = 0; i < CURVE_NUM; i++)
 1286              		.loc 1 228 0 is_stmt 1
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 28


 1287 0952 0023     		movs	r3, #0
 1288 0954 07F5F352 		add	r2, r7, #7776
 1289 0958 02F10C02 		add	r2, r2, #12
 1290 095c 1360     		str	r3, [r2]
 1291 095e 55E0     		b	.L61
 1292              	.L64:
 229:main.c        ****                 {
 230:main.c        ****                     for(j = 0; j < VDS_NMOS_LENGTH; j++)
 1293              		.loc 1 230 0
 1294 0960 0023     		movs	r3, #0
 1295 0962 07F5F352 		add	r2, r7, #7776
 1296 0966 02F10802 		add	r2, r2, #8
 1297 096a 1360     		str	r3, [r2]
 1298 096c 3CE0     		b	.L62
 1299              	.L63:
 231:main.c        ****                     {
 232:main.c        ****                         Output_data_y[i][j] = single_test(Vds_test_points[j],Vgs_test_points[i]);
 1300              		.loc 1 232 0 discriminator 3
 1301 096e 07F5EC52 		add	r2, r7, #7552
 1302 0972 02F10802 		add	r2, r2, #8
 1303 0976 07F5F353 		add	r3, r7, #7776
 1304 097a 03F10803 		add	r3, r3, #8
 1305 097e 1B68     		ldr	r3, [r3]
 1306 0980 1344     		add	r3, r3, r2
 1307 0982 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1308 0984 07F5F252 		add	r2, r7, #7744
 1309 0988 02F10802 		add	r2, r2, #8
 1310 098c 07F5F353 		add	r3, r7, #7776
 1311 0990 03F10C03 		add	r3, r3, #12
 1312 0994 1B68     		ldr	r3, [r3]
 1313 0996 1344     		add	r3, r3, r2
 1314 0998 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1315 099a 1946     		mov	r1, r3
 1316 099c FFF7FEFF 		bl	single_test
 1317 09a0 0446     		mov	r4, r0
 1318 09a2 0D46     		mov	r5, r1
 1319 09a4 07F5BE62 		add	r2, r7, #1520
 1320 09a8 083A     		subs	r2, r2, #8
 1321 09aa 07F5F353 		add	r3, r7, #7776
 1322 09ae 03F10C03 		add	r3, r3, #12
 1323 09b2 1968     		ldr	r1, [r3]
 1324 09b4 0B46     		mov	r3, r1
 1325 09b6 5B00     		lsls	r3, r3, #1
 1326 09b8 0B44     		add	r3, r3, r1
 1327 09ba 9901     		lsls	r1, r3, #6
 1328 09bc C91A     		subs	r1, r1, r3
 1329 09be 07F5F353 		add	r3, r7, #7776
 1330 09c2 03F10803 		add	r3, r3, #8
 1331 09c6 1B68     		ldr	r3, [r3]
 1332 09c8 0B44     		add	r3, r3, r1
 1333 09ca DB00     		lsls	r3, r3, #3
 1334 09cc 1344     		add	r3, r3, r2
 1335 09ce C3E90045 		strd	r4, [r3]
 230:main.c        ****                     {
 1336              		.loc 1 230 0 discriminator 3
 1337 09d2 07F5F353 		add	r3, r7, #7776
 1338 09d6 03F10803 		add	r3, r3, #8
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 29


 1339 09da 1B68     		ldr	r3, [r3]
 1340 09dc 0133     		adds	r3, r3, #1
 1341 09de 07F5F352 		add	r2, r7, #7776
 1342 09e2 02F10802 		add	r2, r2, #8
 1343 09e6 1360     		str	r3, [r2]
 1344              	.L62:
 230:main.c        ****                     {
 1345              		.loc 1 230 0 is_stmt 0 discriminator 1
 1346 09e8 07F5F353 		add	r3, r7, #7776
 1347 09ec 03F10803 		add	r3, r3, #8
 1348 09f0 1B68     		ldr	r3, [r3]
 1349 09f2 BC2B     		cmp	r3, #188
 1350 09f4 BBDD     		ble	.L63
 228:main.c        ****                 {
 1351              		.loc 1 228 0 is_stmt 1 discriminator 2
 1352 09f6 07F5F353 		add	r3, r7, #7776
 1353 09fa 03F10C03 		add	r3, r3, #12
 1354 09fe 1B68     		ldr	r3, [r3]
 1355 0a00 0133     		adds	r3, r3, #1
 1356 0a02 07F5F352 		add	r2, r7, #7776
 1357 0a06 02F10C02 		add	r2, r2, #12
 1358 0a0a 1360     		str	r3, [r2]
 1359              	.L61:
 228:main.c        ****                 {
 1360              		.loc 1 228 0 is_stmt 0 discriminator 1
 1361 0a0c 07F5F353 		add	r3, r7, #7776
 1362 0a10 03F10C03 		add	r3, r3, #12
 1363 0a14 1B68     		ldr	r3, [r3]
 1364 0a16 032B     		cmp	r3, #3
 1365 0a18 A2DD     		ble	.L64
 233:main.c        ****                     }
 234:main.c        ****                 }
 235:main.c        ****                 break;
 1366              		.loc 1 235 0 is_stmt 1
 1367 0a1a 49E1     		b	.L30
 1368              	.L35:
 236:main.c        ****             case 3:
 237:main.c        ****                 //PNP input
 238:main.c        ****                 Vth =  126; //vgs_th_find(VDAC_G_B_MAX,VDAC_P_1_VOLT);
 1369              		.loc 1 238 0
 1370 0a1c 7E23     		movs	r3, #126
 1371 0a1e 07F5F352 		add	r2, r7, #7776
 1372 0a22 1380     		strh	r3, [r2]	@ movhi
 239:main.c        ****                 if (Vth < 0)
 240:main.c        ****                 {
 241:main.c        ****                     //Print error function
 242:main.c        ****                 }
 243:main.c        ****                 Vgs_max = 188;  //vgs_max_id_find(Vth,VDAC_D_C_MAX,VDAC_G_B_MAX);
 1373              		.loc 1 243 0
 1374 0a24 BC23     		movs	r3, #188
 1375 0a26 07F5F252 		add	r2, r7, #7744
 1376 0a2a 02F11E02 		add	r2, r2, #30
 1377 0a2e 1380     		strh	r3, [r2]	@ movhi
 244:main.c        ****                 Vgs_step = (Vgs_max - Vth)/CURVE_NUM; //Creating the step size for linearlly spaced
 1378              		.loc 1 244 0
 1379 0a30 07F5F253 		add	r3, r7, #7744
 1380 0a34 03F11E03 		add	r3, r3, #30
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 30


 1381 0a38 B3F90020 		ldrsh	r2, [r3]
 1382 0a3c 07F5F353 		add	r3, r7, #7776
 1383 0a40 B3F90030 		ldrsh	r3, [r3]
 1384 0a44 D31A     		subs	r3, r2, r3
 1385 0a46 002B     		cmp	r3, #0
 1386 0a48 00DA     		bge	.L65
 1387 0a4a 0333     		adds	r3, r3, #3
 1388              	.L65:
 1389 0a4c 9B10     		asrs	r3, r3, #2
 1390 0a4e 07F5F252 		add	r2, r7, #7744
 1391 0a52 02F11D02 		add	r2, r2, #29
 1392 0a56 1370     		strb	r3, [r2]
 245:main.c        ****                 Vgs_test_points[0] = Vth;
 1393              		.loc 1 245 0
 1394 0a58 07F5F353 		add	r3, r7, #7776
 1395 0a5c 1B88     		ldrh	r3, [r3]	@ movhi
 1396 0a5e DBB2     		uxtb	r3, r3
 1397 0a60 07F5F252 		add	r2, r7, #7744
 1398 0a64 02F10802 		add	r2, r2, #8
 1399 0a68 1370     		strb	r3, [r2]
 246:main.c        ****                 for (i=1; i < CURVE_NUM; i++)
 1400              		.loc 1 246 0
 1401 0a6a 0123     		movs	r3, #1
 1402 0a6c 07F5F352 		add	r2, r7, #7776
 1403 0a70 02F10C02 		add	r2, r2, #12
 1404 0a74 1360     		str	r3, [r2]
 1405 0a76 2AE0     		b	.L66
 1406              	.L67:
 247:main.c        ****                 {
 248:main.c        ****                     Vgs_test_points[i] = (Vgs_test_points[i-1] + Vgs_step);
 1407              		.loc 1 248 0 discriminator 3
 1408 0a78 07F5F353 		add	r3, r7, #7776
 1409 0a7c 03F10C03 		add	r3, r3, #12
 1410 0a80 1B68     		ldr	r3, [r3]
 1411 0a82 013B     		subs	r3, r3, #1
 1412 0a84 07F5F352 		add	r2, r7, #7776
 1413 0a88 02F11002 		add	r2, r2, #16
 1414 0a8c 1344     		add	r3, r3, r2
 1415 0a8e 13F8282C 		ldrb	r2, [r3, #-40]	@ zero_extendqisi2
 1416 0a92 07F5F253 		add	r3, r7, #7744
 1417 0a96 03F11D03 		add	r3, r3, #29
 1418 0a9a 1B78     		ldrb	r3, [r3]
 1419 0a9c 1344     		add	r3, r3, r2
 1420 0a9e D9B2     		uxtb	r1, r3
 1421 0aa0 07F5F252 		add	r2, r7, #7744
 1422 0aa4 02F10802 		add	r2, r2, #8
 1423 0aa8 07F5F353 		add	r3, r7, #7776
 1424 0aac 03F10C03 		add	r3, r3, #12
 1425 0ab0 1B68     		ldr	r3, [r3]
 1426 0ab2 1344     		add	r3, r3, r2
 1427 0ab4 0A46     		mov	r2, r1
 1428 0ab6 1A70     		strb	r2, [r3]
 246:main.c        ****                 for (i=1; i < CURVE_NUM; i++)
 1429              		.loc 1 246 0 discriminator 3
 1430 0ab8 07F5F353 		add	r3, r7, #7776
 1431 0abc 03F10C03 		add	r3, r3, #12
 1432 0ac0 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 31


 1433 0ac2 0133     		adds	r3, r3, #1
 1434 0ac4 07F5F352 		add	r2, r7, #7776
 1435 0ac8 02F10C02 		add	r2, r2, #12
 1436 0acc 1360     		str	r3, [r2]
 1437              	.L66:
 246:main.c        ****                 for (i=1; i < CURVE_NUM; i++)
 1438              		.loc 1 246 0 is_stmt 0 discriminator 1
 1439 0ace 07F5F353 		add	r3, r7, #7776
 1440 0ad2 03F10C03 		add	r3, r3, #12
 1441 0ad6 1B68     		ldr	r3, [r3]
 1442 0ad8 032B     		cmp	r3, #3
 1443 0ada CDDD     		ble	.L67
 249:main.c        ****                 }
 250:main.c        ****                 Vds_test_points[0] = 0;
 1444              		.loc 1 250 0 is_stmt 1
 1445 0adc 0023     		movs	r3, #0
 1446 0ade 07F5EC52 		add	r2, r7, #7552
 1447 0ae2 02F10802 		add	r2, r2, #8
 1448 0ae6 1370     		strb	r3, [r2]
 251:main.c        ****                 Output_data_x[0] = 0;
 1449              		.loc 1 251 0
 1450 0ae8 07F11003 		add	r3, r7, #16
 1451 0aec 103B     		subs	r3, r3, #16
 1452 0aee 4FF00001 		mov	r1, #0
 1453 0af2 4FF00002 		mov	r2, #0
 1454 0af6 C3E90012 		strd	r1, [r3]
 252:main.c        ****                 for(i=1; i < VDS_NMOS_LENGTH; i++)
 1455              		.loc 1 252 0
 1456 0afa 0123     		movs	r3, #1
 1457 0afc 07F5F352 		add	r2, r7, #7776
 1458 0b00 02F10C02 		add	r2, r2, #12
 1459 0b04 1360     		str	r3, [r2]
 1460 0b06 5CE0     		b	.L68
 1461              	.L69:
 253:main.c        ****                 {
 254:main.c        ****                     Vds_test_points[i] = Vds_test_points[i-1] + VD_STEP_NMOS;
 1462              		.loc 1 254 0 discriminator 3
 1463 0b08 07F5F353 		add	r3, r7, #7776
 1464 0b0c 03F10C03 		add	r3, r3, #12
 1465 0b10 1B68     		ldr	r3, [r3]
 1466 0b12 013B     		subs	r3, r3, #1
 1467 0b14 07F5F352 		add	r2, r7, #7776
 1468 0b18 02F11002 		add	r2, r2, #16
 1469 0b1c 1344     		add	r3, r3, r2
 1470 0b1e 13F8E83C 		ldrb	r3, [r3, #-232]	@ zero_extendqisi2
 1471 0b22 0133     		adds	r3, r3, #1
 1472 0b24 D9B2     		uxtb	r1, r3
 1473 0b26 07F5EC52 		add	r2, r7, #7552
 1474 0b2a 02F10802 		add	r2, r2, #8
 1475 0b2e 07F5F353 		add	r3, r7, #7776
 1476 0b32 03F10C03 		add	r3, r3, #12
 1477 0b36 1B68     		ldr	r3, [r3]
 1478 0b38 1344     		add	r3, r3, r2
 1479 0b3a 0A46     		mov	r2, r1
 1480 0b3c 1A70     		strb	r2, [r3]
 255:main.c        ****                     Output_data_x[i] = Vds_test_points[i-1]/2560.0 * 3.0 * 4.096; //Translates VDAC
 1481              		.loc 1 255 0 discriminator 3
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 32


 1482 0b3e 07F5F353 		add	r3, r7, #7776
 1483 0b42 03F10C03 		add	r3, r3, #12
 1484 0b46 1B68     		ldr	r3, [r3]
 1485 0b48 013B     		subs	r3, r3, #1
 1486 0b4a 07F5F352 		add	r2, r7, #7776
 1487 0b4e 02F11002 		add	r2, r2, #16
 1488 0b52 1344     		add	r3, r3, r2
 1489 0b54 13F8E83C 		ldrb	r3, [r3, #-232]	@ zero_extendqisi2
 1490 0b58 1846     		mov	r0, r3
 1491 0b5a FFF7FEFF 		bl	__aeabi_i2d
 1492 0b5e 4FF00002 		mov	r2, #0
 1493 0b62 254B     		ldr	r3, .L80+8
 1494 0b64 FFF7FEFF 		bl	__aeabi_ddiv
 1495 0b68 0346     		mov	r3, r0
 1496 0b6a 0C46     		mov	r4, r1
 1497 0b6c 1846     		mov	r0, r3
 1498 0b6e 2146     		mov	r1, r4
 1499 0b70 4FF00002 		mov	r2, #0
 1500 0b74 214B     		ldr	r3, .L80+12
 1501 0b76 FFF7FEFF 		bl	__aeabi_dmul
 1502 0b7a 0346     		mov	r3, r0
 1503 0b7c 0C46     		mov	r4, r1
 1504 0b7e 1846     		mov	r0, r3
 1505 0b80 2146     		mov	r1, r4
 1506 0b82 1BA3     		adr	r3, .L80
 1507 0b84 D3E90023 		ldrd	r2, [r3]
 1508 0b88 FFF7FEFF 		bl	__aeabi_dmul
 1509 0b8c 0346     		mov	r3, r0
 1510 0b8e 0C46     		mov	r4, r1
 1511 0b90 1946     		mov	r1, r3
 1512 0b92 2246     		mov	r2, r4
 1513 0b94 07F11003 		add	r3, r7, #16
 1514 0b98 103B     		subs	r3, r3, #16
 1515 0b9a 07F5F350 		add	r0, r7, #7776
 1516 0b9e 00F10C00 		add	r0, r0, #12
 1517 0ba2 0068     		ldr	r0, [r0]
 1518 0ba4 C000     		lsls	r0, r0, #3
 1519 0ba6 0344     		add	r3, r3, r0
 1520 0ba8 C3E90012 		strd	r1, [r3]
 252:main.c        ****                 for(i=1; i < VDS_NMOS_LENGTH; i++)
 1521              		.loc 1 252 0 discriminator 3
 1522 0bac 07F5F353 		add	r3, r7, #7776
 1523 0bb0 03F10C03 		add	r3, r3, #12
 1524 0bb4 1B68     		ldr	r3, [r3]
 1525 0bb6 0133     		adds	r3, r3, #1
 1526 0bb8 07F5F352 		add	r2, r7, #7776
 1527 0bbc 02F10C02 		add	r2, r2, #12
 1528 0bc0 1360     		str	r3, [r2]
 1529              	.L68:
 252:main.c        ****                 for(i=1; i < VDS_NMOS_LENGTH; i++)
 1530              		.loc 1 252 0 is_stmt 0 discriminator 1
 1531 0bc2 07F5F353 		add	r3, r7, #7776
 1532 0bc6 03F10C03 		add	r3, r3, #12
 1533 0bca 1B68     		ldr	r3, [r3]
 1534 0bcc BC2B     		cmp	r3, #188
 1535 0bce 9BDD     		ble	.L69
 256:main.c        ****                 }
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 33


 257:main.c        ****                 for(i = 0; i < CURVE_NUM; i++)
 1536              		.loc 1 257 0 is_stmt 1
 1537 0bd0 0023     		movs	r3, #0
 1538 0bd2 07F5F352 		add	r2, r7, #7776
 1539 0bd6 02F10C02 		add	r2, r2, #12
 1540 0bda 1360     		str	r3, [r2]
 1541 0bdc 5FE0     		b	.L70
 1542              	.L73:
 258:main.c        ****                 {
 259:main.c        ****                     for(j = 0; j < VDS_NMOS_LENGTH; j++)
 1543              		.loc 1 259 0
 1544 0bde 0023     		movs	r3, #0
 1545 0be0 07F5F352 		add	r2, r7, #7776
 1546 0be4 02F10802 		add	r2, r2, #8
 1547 0be8 1360     		str	r3, [r2]
 1548 0bea 46E0     		b	.L71
 1549              	.L81:
 1550 0bec AFF30080 		.align	3
 1551              	.L80:
 1552 0bf0 FCA9F1D2 		.word	-755914244
 1553 0bf4 4D621040 		.word	1074815565
 1554 0bf8 0000A440 		.word	1084489728
 1555 0bfc 00000840 		.word	1074266112
 1556              	.L72:
 260:main.c        ****                     {
 261:main.c        ****                         Output_data_y[i][j] = single_test(Vds_test_points[j],Vgs_test_points[i]);
 1557              		.loc 1 261 0 discriminator 3
 1558 0c00 07F5EC52 		add	r2, r7, #7552
 1559 0c04 02F10802 		add	r2, r2, #8
 1560 0c08 07F5F353 		add	r3, r7, #7776
 1561 0c0c 03F10803 		add	r3, r3, #8
 1562 0c10 1B68     		ldr	r3, [r3]
 1563 0c12 1344     		add	r3, r3, r2
 1564 0c14 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1565 0c16 07F5F252 		add	r2, r7, #7744
 1566 0c1a 02F10802 		add	r2, r2, #8
 1567 0c1e 07F5F353 		add	r3, r7, #7776
 1568 0c22 03F10C03 		add	r3, r3, #12
 1569 0c26 1B68     		ldr	r3, [r3]
 1570 0c28 1344     		add	r3, r3, r2
 1571 0c2a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1572 0c2c 1946     		mov	r1, r3
 1573 0c2e FFF7FEFF 		bl	single_test
 1574 0c32 0446     		mov	r4, r0
 1575 0c34 0D46     		mov	r5, r1
 1576 0c36 07F5BE62 		add	r2, r7, #1520
 1577 0c3a 083A     		subs	r2, r2, #8
 1578 0c3c 07F5F353 		add	r3, r7, #7776
 1579 0c40 03F10C03 		add	r3, r3, #12
 1580 0c44 1968     		ldr	r1, [r3]
 1581 0c46 0B46     		mov	r3, r1
 1582 0c48 5B00     		lsls	r3, r3, #1
 1583 0c4a 0B44     		add	r3, r3, r1
 1584 0c4c 9901     		lsls	r1, r3, #6
 1585 0c4e C91A     		subs	r1, r1, r3
 1586 0c50 07F5F353 		add	r3, r7, #7776
 1587 0c54 03F10803 		add	r3, r3, #8
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 34


 1588 0c58 1B68     		ldr	r3, [r3]
 1589 0c5a 0B44     		add	r3, r3, r1
 1590 0c5c DB00     		lsls	r3, r3, #3
 1591 0c5e 1344     		add	r3, r3, r2
 1592 0c60 C3E90045 		strd	r4, [r3]
 259:main.c        ****                     {
 1593              		.loc 1 259 0 discriminator 3
 1594 0c64 07F5F353 		add	r3, r7, #7776
 1595 0c68 03F10803 		add	r3, r3, #8
 1596 0c6c 1B68     		ldr	r3, [r3]
 1597 0c6e 0133     		adds	r3, r3, #1
 1598 0c70 07F5F352 		add	r2, r7, #7776
 1599 0c74 02F10802 		add	r2, r2, #8
 1600 0c78 1360     		str	r3, [r2]
 1601              	.L71:
 259:main.c        ****                     {
 1602              		.loc 1 259 0 is_stmt 0 discriminator 1
 1603 0c7a 07F5F353 		add	r3, r7, #7776
 1604 0c7e 03F10803 		add	r3, r3, #8
 1605 0c82 1B68     		ldr	r3, [r3]
 1606 0c84 BC2B     		cmp	r3, #188
 1607 0c86 BBDD     		ble	.L72
 257:main.c        ****                 {
 1608              		.loc 1 257 0 is_stmt 1 discriminator 2
 1609 0c88 07F5F353 		add	r3, r7, #7776
 1610 0c8c 03F10C03 		add	r3, r3, #12
 1611 0c90 1B68     		ldr	r3, [r3]
 1612 0c92 0133     		adds	r3, r3, #1
 1613 0c94 07F5F352 		add	r2, r7, #7776
 1614 0c98 02F10C02 		add	r2, r2, #12
 1615 0c9c 1360     		str	r3, [r2]
 1616              	.L70:
 257:main.c        ****                 {
 1617              		.loc 1 257 0 is_stmt 0 discriminator 1
 1618 0c9e 07F5F353 		add	r3, r7, #7776
 1619 0ca2 03F10C03 		add	r3, r3, #12
 1620 0ca6 1B68     		ldr	r3, [r3]
 1621 0ca8 032B     		cmp	r3, #3
 1622 0caa 98DD     		ble	.L73
 262:main.c        ****                     }
 263:main.c        ****                 }
 264:main.c        ****                 break;
 1623              		.loc 1 264 0 is_stmt 1
 1624 0cac 00E0     		b	.L30
 1625              	.L75:
 141:main.c        ****                 }
 1626              		.loc 1 141 0
 1627 0cae 00BF     		nop
 1628              	.L30:
 265:main.c        ****             }
 266:main.c        ****         ADC_SAR_1_Sleep();
 1629              		.loc 1 266 0
 1630 0cb0 FFF7FEFF 		bl	ADC_SAR_1_Sleep
 267:main.c        ****         VDAC8_DS_SetValue(0);
 1631              		.loc 1 267 0
 1632 0cb4 0020     		movs	r0, #0
 1633 0cb6 FFF7FEFF 		bl	VDAC8_DS_SetValue
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 35


 268:main.c        ****         VDAC8_GS_SetValue(0);
 1634              		.loc 1 268 0
 1635 0cba 0020     		movs	r0, #0
 1636 0cbc FFF7FEFF 		bl	VDAC8_GS_SetValue
 269:main.c        **** 
 270:main.c        ****     }
 1637              		.loc 1 270 0
 1638 0cc0 FFF7C6B9 		b	.L74
 1639              		.cfi_endproc
 1640              	.LFE68:
 1641              		.size	main, .-main
 1642              		.text
 1643              	.Letext0:
 1644              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1645              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\4.2\\psoc creator\\import\\gnu\\arm\\5.4.
 1646              		.file 4 "Generated_Source\\PSoC5/core_cm3.h"
 1647              		.section	.debug_info,"",%progbits
 1648              	.Ldebug_info0:
 1649 0000 44030000 		.4byte	0x344
 1650 0004 0400     		.2byte	0x4
 1651 0006 00000000 		.4byte	.Ldebug_abbrev0
 1652 000a 04       		.byte	0x4
 1653 000b 01       		.uleb128 0x1
 1654 000c 1A000000 		.4byte	.LASF37
 1655 0010 0C       		.byte	0xc
 1656 0011 91020000 		.4byte	.LASF38
 1657 0015 EE000000 		.4byte	.LASF39
 1658 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1659 001d 00000000 		.4byte	0
 1660 0021 00000000 		.4byte	.Ldebug_line0
 1661 0025 02       		.uleb128 0x2
 1662 0026 01       		.byte	0x1
 1663 0027 06       		.byte	0x6
 1664 0028 48020000 		.4byte	.LASF0
 1665 002c 02       		.uleb128 0x2
 1666 002d 01       		.byte	0x1
 1667 002e 08       		.byte	0x8
 1668 002f CF010000 		.4byte	.LASF1
 1669 0033 02       		.uleb128 0x2
 1670 0034 02       		.byte	0x2
 1671 0035 05       		.byte	0x5
 1672 0036 9D020000 		.4byte	.LASF2
 1673 003a 02       		.uleb128 0x2
 1674 003b 02       		.byte	0x2
 1675 003c 07       		.byte	0x7
 1676 003d 97010000 		.4byte	.LASF3
 1677 0041 03       		.uleb128 0x3
 1678 0042 A8000000 		.4byte	.LASF9
 1679 0046 02       		.byte	0x2
 1680 0047 3F       		.byte	0x3f
 1681 0048 4C000000 		.4byte	0x4c
 1682 004c 02       		.uleb128 0x2
 1683 004d 04       		.byte	0x4
 1684 004e 05       		.byte	0x5
 1685 004f B7020000 		.4byte	.LASF4
 1686 0053 02       		.uleb128 0x2
 1687 0054 04       		.byte	0x4
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 36


 1688 0055 07       		.byte	0x7
 1689 0056 85010000 		.4byte	.LASF5
 1690 005a 02       		.uleb128 0x2
 1691 005b 08       		.byte	0x8
 1692 005c 05       		.byte	0x5
 1693 005d 83020000 		.4byte	.LASF6
 1694 0061 02       		.uleb128 0x2
 1695 0062 08       		.byte	0x8
 1696 0063 07       		.byte	0x7
 1697 0064 28020000 		.4byte	.LASF7
 1698 0068 04       		.uleb128 0x4
 1699 0069 04       		.byte	0x4
 1700 006a 05       		.byte	0x5
 1701 006b 696E7400 		.ascii	"int\000"
 1702 006f 02       		.uleb128 0x2
 1703 0070 04       		.byte	0x4
 1704 0071 07       		.byte	0x7
 1705 0072 0E020000 		.4byte	.LASF8
 1706 0076 03       		.uleb128 0x3
 1707 0077 D8000000 		.4byte	.LASF10
 1708 007b 03       		.byte	0x3
 1709 007c 2C       		.byte	0x2c
 1710 007d 41000000 		.4byte	0x41
 1711 0081 02       		.uleb128 0x2
 1712 0082 04       		.byte	0x4
 1713 0083 04       		.byte	0x4
 1714 0084 E8000000 		.4byte	.LASF11
 1715 0088 02       		.uleb128 0x2
 1716 0089 08       		.byte	0x8
 1717 008a 04       		.byte	0x4
 1718 008b EE010000 		.4byte	.LASF12
 1719 008f 02       		.uleb128 0x2
 1720 0090 01       		.byte	0x1
 1721 0091 08       		.byte	0x8
 1722 0092 98020000 		.4byte	.LASF13
 1723 0096 02       		.uleb128 0x2
 1724 0097 08       		.byte	0x8
 1725 0098 04       		.byte	0x4
 1726 0099 C0020000 		.4byte	.LASF14
 1727 009d 05       		.uleb128 0x5
 1728 009e 2C000000 		.4byte	0x2c
 1729 00a2 AD000000 		.4byte	0xad
 1730 00a6 06       		.uleb128 0x6
 1731 00a7 AD000000 		.4byte	0xad
 1732 00ab 03       		.byte	0x3
 1733 00ac 00       		.byte	0
 1734 00ad 02       		.uleb128 0x2
 1735 00ae 04       		.byte	0x4
 1736 00af 07       		.byte	0x7
 1737 00b0 6A020000 		.4byte	.LASF15
 1738 00b4 07       		.uleb128 0x7
 1739 00b5 6D010000 		.4byte	.LASF16
 1740 00b9 01       		.byte	0x1
 1741 00ba 16       		.byte	0x16
 1742 00bb 88000000 		.4byte	0x88
 1743 00bf 00000000 		.4byte	.LFB64
 1744 00c3 70000000 		.4byte	.LFE64-.LFB64
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 37


 1745 00c7 01       		.uleb128 0x1
 1746 00c8 9C       		.byte	0x9c
 1747 00c9 F8000000 		.4byte	0xf8
 1748 00cd 08       		.uleb128 0x8
 1749 00ce 56647300 		.ascii	"Vds\000"
 1750 00d2 01       		.byte	0x1
 1751 00d3 16       		.byte	0x16
 1752 00d4 2C000000 		.4byte	0x2c
 1753 00d8 02       		.uleb128 0x2
 1754 00d9 91       		.byte	0x91
 1755 00da 67       		.sleb128 -25
 1756 00db 08       		.uleb128 0x8
 1757 00dc 56677300 		.ascii	"Vgs\000"
 1758 00e0 01       		.byte	0x1
 1759 00e1 16       		.byte	0x16
 1760 00e2 2C000000 		.4byte	0x2c
 1761 00e6 02       		.uleb128 0x2
 1762 00e7 91       		.byte	0x91
 1763 00e8 66       		.sleb128 -26
 1764 00e9 09       		.uleb128 0x9
 1765 00ea B2000000 		.4byte	.LASF18
 1766 00ee 01       		.byte	0x1
 1767 00ef 18       		.byte	0x18
 1768 00f0 88000000 		.4byte	0x88
 1769 00f4 02       		.uleb128 0x2
 1770 00f5 91       		.byte	0x91
 1771 00f6 68       		.sleb128 -24
 1772 00f7 00       		.byte	0
 1773 00f8 07       		.uleb128 0x7
 1774 00f9 B9000000 		.4byte	.LASF17
 1775 00fd 01       		.byte	0x1
 1776 00fe 24       		.byte	0x24
 1777 00ff 88000000 		.4byte	0x88
 1778 0103 00000000 		.4byte	.LFB65
 1779 0107 68000000 		.4byte	.LFE65-.LFB65
 1780 010b 01       		.uleb128 0x1
 1781 010c 9C       		.byte	0x9c
 1782 010d 2E010000 		.4byte	0x12e
 1783 0111 08       		.uleb128 0x8
 1784 0112 56677300 		.ascii	"Vgs\000"
 1785 0116 01       		.byte	0x1
 1786 0117 24       		.byte	0x24
 1787 0118 2C000000 		.4byte	0x2c
 1788 011c 02       		.uleb128 0x2
 1789 011d 91       		.byte	0x91
 1790 011e 67       		.sleb128 -25
 1791 011f 09       		.uleb128 0x9
 1792 0120 B2000000 		.4byte	.LASF18
 1793 0124 01       		.byte	0x1
 1794 0125 26       		.byte	0x26
 1795 0126 88000000 		.4byte	0x88
 1796 012a 02       		.uleb128 0x2
 1797 012b 91       		.byte	0x91
 1798 012c 68       		.sleb128 -24
 1799 012d 00       		.byte	0
 1800 012e 07       		.uleb128 0x7
 1801 012f 79010000 		.4byte	.LASF19
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 38


 1802 0133 01       		.byte	0x1
 1803 0134 35       		.byte	0x35
 1804 0135 68000000 		.4byte	0x68
 1805 0139 00000000 		.4byte	.LFB66
 1806 013d 78000000 		.4byte	.LFE66-.LFB66
 1807 0141 01       		.uleb128 0x1
 1808 0142 9C       		.byte	0x9c
 1809 0143 7F010000 		.4byte	0x17f
 1810 0147 0A       		.uleb128 0xa
 1811 0148 C7010000 		.4byte	.LASF20
 1812 014c 01       		.byte	0x1
 1813 014d 35       		.byte	0x35
 1814 014e 2C000000 		.4byte	0x2c
 1815 0152 02       		.uleb128 0x2
 1816 0153 91       		.byte	0x91
 1817 0154 5F       		.sleb128 -33
 1818 0155 08       		.uleb128 0x8
 1819 0156 56647300 		.ascii	"Vds\000"
 1820 015a 01       		.byte	0x1
 1821 015b 35       		.byte	0x35
 1822 015c 2C000000 		.4byte	0x2c
 1823 0160 02       		.uleb128 0x2
 1824 0161 91       		.byte	0x91
 1825 0162 5E       		.sleb128 -34
 1826 0163 0B       		.uleb128 0xb
 1827 0164 56677300 		.ascii	"Vgs\000"
 1828 0168 01       		.byte	0x1
 1829 0169 37       		.byte	0x37
 1830 016a 2C000000 		.4byte	0x2c
 1831 016e 02       		.uleb128 0x2
 1832 016f 91       		.byte	0x91
 1833 0170 6F       		.sleb128 -17
 1834 0171 0B       		.uleb128 0xb
 1835 0172 496400   		.ascii	"Id\000"
 1836 0175 01       		.byte	0x1
 1837 0176 39       		.byte	0x39
 1838 0177 88000000 		.4byte	0x88
 1839 017b 02       		.uleb128 0x2
 1840 017c 91       		.byte	0x91
 1841 017d 60       		.sleb128 -32
 1842 017e 00       		.byte	0
 1843 017f 07       		.uleb128 0x7
 1844 0180 73020000 		.4byte	.LASF21
 1845 0184 01       		.byte	0x1
 1846 0185 4D       		.byte	0x4d
 1847 0186 3A000000 		.4byte	0x3a
 1848 018a 00000000 		.4byte	.LFB67
 1849 018e 68000000 		.4byte	.LFE67-.LFB67
 1850 0192 01       		.uleb128 0x1
 1851 0193 9C       		.byte	0x9c
 1852 0194 DE010000 		.4byte	0x1de
 1853 0198 08       		.uleb128 0x8
 1854 0199 56746800 		.ascii	"Vth\000"
 1855 019d 01       		.byte	0x1
 1856 019e 4D       		.byte	0x4d
 1857 019f 2C000000 		.4byte	0x2c
 1858 01a3 02       		.uleb128 0x2
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 39


 1859 01a4 91       		.byte	0x91
 1860 01a5 67       		.sleb128 -25
 1861 01a6 0A       		.uleb128 0xa
 1862 01a7 F5010000 		.4byte	.LASF22
 1863 01ab 01       		.byte	0x1
 1864 01ac 4D       		.byte	0x4d
 1865 01ad 2C000000 		.4byte	0x2c
 1866 01b1 02       		.uleb128 0x2
 1867 01b2 91       		.byte	0x91
 1868 01b3 66       		.sleb128 -26
 1869 01b4 0A       		.uleb128 0xa
 1870 01b5 C7010000 		.4byte	.LASF20
 1871 01b9 01       		.byte	0x1
 1872 01ba 4D       		.byte	0x4d
 1873 01bb 2C000000 		.4byte	0x2c
 1874 01bf 02       		.uleb128 0x2
 1875 01c0 91       		.byte	0x91
 1876 01c1 65       		.sleb128 -27
 1877 01c2 0B       		.uleb128 0xb
 1878 01c3 56677300 		.ascii	"Vgs\000"
 1879 01c7 01       		.byte	0x1
 1880 01c8 4F       		.byte	0x4f
 1881 01c9 2C000000 		.4byte	0x2c
 1882 01cd 02       		.uleb128 0x2
 1883 01ce 91       		.byte	0x91
 1884 01cf 77       		.sleb128 -9
 1885 01d0 0B       		.uleb128 0xb
 1886 01d1 496400   		.ascii	"Id\000"
 1887 01d4 01       		.byte	0x1
 1888 01d5 51       		.byte	0x51
 1889 01d6 88000000 		.4byte	0x88
 1890 01da 02       		.uleb128 0x2
 1891 01db 91       		.byte	0x91
 1892 01dc 68       		.sleb128 -24
 1893 01dd 00       		.byte	0
 1894 01de 07       		.uleb128 0x7
 1895 01df 09020000 		.4byte	.LASF23
 1896 01e3 01       		.byte	0x1
 1897 01e4 63       		.byte	0x63
 1898 01e5 68000000 		.4byte	0x68
 1899 01e9 00000000 		.4byte	.LFB68
 1900 01ed C40C0000 		.4byte	.LFE68-.LFB68
 1901 01f1 01       		.uleb128 0x1
 1902 01f2 9C       		.byte	0x9c
 1903 01f3 F0020000 		.4byte	0x2f0
 1904 01f7 0C       		.uleb128 0xc
 1905 01f8 0E000000 		.4byte	.LASF40
 1906 01fc 01       		.byte	0x1
 1907 01fd 6A       		.byte	0x6a
 1908 01fe 68000000 		.4byte	0x68
 1909 0202 0B       		.uleb128 0xb
 1910 0203 6900     		.ascii	"i\000"
 1911 0205 01       		.byte	0x1
 1912 0206 6C       		.byte	0x6c
 1913 0207 68000000 		.4byte	0x68
 1914 020b 02       		.uleb128 0x2
 1915 020c 91       		.byte	0x91
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 40


 1916 020d 6C       		.sleb128 -20
 1917 020e 0B       		.uleb128 0xb
 1918 020f 6A00     		.ascii	"j\000"
 1919 0211 01       		.byte	0x1
 1920 0212 6D       		.byte	0x6d
 1921 0213 68000000 		.4byte	0x68
 1922 0217 02       		.uleb128 0x2
 1923 0218 91       		.byte	0x91
 1924 0219 68       		.sleb128 -24
 1925 021a 09       		.uleb128 0x9
 1926 021b DD010000 		.4byte	.LASF24
 1927 021f 01       		.byte	0x1
 1928 0220 6F       		.byte	0x6f
 1929 0221 2C000000 		.4byte	0x2c
 1930 0225 02       		.uleb128 0x2
 1931 0226 91       		.byte	0x91
 1932 0227 67       		.sleb128 -25
 1933 0228 09       		.uleb128 0x9
 1934 0229 3F020000 		.4byte	.LASF25
 1935 022d 01       		.byte	0x1
 1936 022e 70       		.byte	0x70
 1937 022f 33000000 		.4byte	0x33
 1938 0233 02       		.uleb128 0x2
 1939 0234 91       		.byte	0x91
 1940 0235 64       		.sleb128 -28
 1941 0236 09       		.uleb128 0x9
 1942 0237 CC020000 		.4byte	.LASF26
 1943 023b 01       		.byte	0x1
 1944 023c 71       		.byte	0x71
 1945 023d 33000000 		.4byte	0x33
 1946 0241 02       		.uleb128 0x2
 1947 0242 91       		.byte	0x91
 1948 0243 62       		.sleb128 -30
 1949 0244 0B       		.uleb128 0xb
 1950 0245 56746800 		.ascii	"Vth\000"
 1951 0249 01       		.byte	0x1
 1952 024a 73       		.byte	0x73
 1953 024b 33000000 		.4byte	0x33
 1954 024f 02       		.uleb128 0x2
 1955 0250 91       		.byte	0x91
 1956 0251 60       		.sleb128 -32
 1957 0252 09       		.uleb128 0x9
 1958 0253 C7010000 		.4byte	.LASF20
 1959 0257 01       		.byte	0x1
 1960 0258 74       		.byte	0x74
 1961 0259 33000000 		.4byte	0x33
 1962 025d 02       		.uleb128 0x2
 1963 025e 91       		.byte	0x91
 1964 025f 5E       		.sleb128 -34
 1965 0260 09       		.uleb128 0x9
 1966 0261 D0000000 		.4byte	.LASF27
 1967 0265 01       		.byte	0x1
 1968 0266 75       		.byte	0x75
 1969 0267 33000000 		.4byte	0x33
 1970 026b 02       		.uleb128 0x2
 1971 026c 91       		.byte	0x91
 1972 026d 54       		.sleb128 -44
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 41


 1973 026e 09       		.uleb128 0x9
 1974 026f E0000000 		.4byte	.LASF28
 1975 0273 01       		.byte	0x1
 1976 0274 76       		.byte	0x76
 1977 0275 33000000 		.4byte	0x33
 1978 0279 02       		.uleb128 0x2
 1979 027a 91       		.byte	0x91
 1980 027b 56       		.sleb128 -42
 1981 027c 09       		.uleb128 0x9
 1982 027d 1B020000 		.4byte	.LASF29
 1983 0281 01       		.byte	0x1
 1984 0282 77       		.byte	0x77
 1985 0283 33000000 		.4byte	0x33
 1986 0287 02       		.uleb128 0x2
 1987 0288 91       		.byte	0x91
 1988 0289 58       		.sleb128 -40
 1989 028a 09       		.uleb128 0x9
 1990 028b 5D020000 		.4byte	.LASF30
 1991 028f 01       		.byte	0x1
 1992 0290 78       		.byte	0x78
 1993 0291 33000000 		.4byte	0x33
 1994 0295 02       		.uleb128 0x2
 1995 0296 91       		.byte	0x91
 1996 0297 5A       		.sleb128 -38
 1997 0298 09       		.uleb128 0x9
 1998 0299 FD010000 		.4byte	.LASF31
 1999 029d 01       		.byte	0x1
 2000 029e 79       		.byte	0x79
 2001 029f F0020000 		.4byte	0x2f0
 2002 02a3 02       		.uleb128 0x2
 2003 02a4 91       		.byte	0x91
 2004 02a5 4C       		.sleb128 -52
 2005 02a6 09       		.uleb128 0x9
 2006 02a7 54020000 		.4byte	.LASF32
 2007 02ab 01       		.byte	0x1
 2008 02ac 7B       		.byte	0x7b
 2009 02ad 2C000000 		.4byte	0x2c
 2010 02b1 02       		.uleb128 0x2
 2011 02b2 91       		.byte	0x91
 2012 02b3 5D       		.sleb128 -35
 2013 02b4 09       		.uleb128 0x9
 2014 02b5 AA010000 		.4byte	.LASF33
 2015 02b9 01       		.byte	0x1
 2016 02ba 7C       		.byte	0x7c
 2017 02bb 9D000000 		.4byte	0x9d
 2018 02bf 02       		.uleb128 0x2
 2019 02c0 91       		.byte	0x91
 2020 02c1 48       		.sleb128 -56
 2021 02c2 09       		.uleb128 0x9
 2022 02c3 A7020000 		.4byte	.LASF34
 2023 02c7 01       		.byte	0x1
 2024 02c8 7D       		.byte	0x7d
 2025 02c9 00030000 		.4byte	0x300
 2026 02cd 03       		.uleb128 0x3
 2027 02ce 91       		.byte	0x91
 2028 02cf 887E     		.sleb128 -248
 2029 02d1 09       		.uleb128 0x9
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 42


 2030 02d2 00000000 		.4byte	.LASF35
 2031 02d6 01       		.byte	0x1
 2032 02d7 7F       		.byte	0x7f
 2033 02d8 10030000 		.4byte	0x310
 2034 02dc 03       		.uleb128 0x3
 2035 02dd 91       		.byte	0x91
 2036 02de E84E     		.sleb128 -6296
 2037 02e0 09       		.uleb128 0x9
 2038 02e1 D5020000 		.4byte	.LASF36
 2039 02e5 01       		.byte	0x1
 2040 02e6 80       		.byte	0x80
 2041 02e7 26030000 		.4byte	0x326
 2042 02eb 03       		.uleb128 0x3
 2043 02ec 91       		.byte	0x91
 2044 02ed 8043     		.sleb128 -7808
 2045 02ef 00       		.byte	0
 2046 02f0 05       		.uleb128 0x5
 2047 02f1 33000000 		.4byte	0x33
 2048 02f5 00030000 		.4byte	0x300
 2049 02f9 06       		.uleb128 0x6
 2050 02fa AD000000 		.4byte	0xad
 2051 02fe 03       		.byte	0x3
 2052 02ff 00       		.byte	0
 2053 0300 05       		.uleb128 0x5
 2054 0301 2C000000 		.4byte	0x2c
 2055 0305 10030000 		.4byte	0x310
 2056 0309 06       		.uleb128 0x6
 2057 030a AD000000 		.4byte	0xad
 2058 030e BC       		.byte	0xbc
 2059 030f 00       		.byte	0
 2060 0310 05       		.uleb128 0x5
 2061 0311 88000000 		.4byte	0x88
 2062 0315 26030000 		.4byte	0x326
 2063 0319 06       		.uleb128 0x6
 2064 031a AD000000 		.4byte	0xad
 2065 031e 03       		.byte	0x3
 2066 031f 06       		.uleb128 0x6
 2067 0320 AD000000 		.4byte	0xad
 2068 0324 BC       		.byte	0xbc
 2069 0325 00       		.byte	0
 2070 0326 05       		.uleb128 0x5
 2071 0327 88000000 		.4byte	0x88
 2072 032b 36030000 		.4byte	0x336
 2073 032f 06       		.uleb128 0x6
 2074 0330 AD000000 		.4byte	0xad
 2075 0334 BC       		.byte	0xbc
 2076 0335 00       		.byte	0
 2077 0336 0D       		.uleb128 0xd
 2078 0337 BA010000 		.4byte	.LASF41
 2079 033b 04       		.byte	0x4
 2080 033c 1207     		.2byte	0x712
 2081 033e 42030000 		.4byte	0x342
 2082 0342 0E       		.uleb128 0xe
 2083 0343 76000000 		.4byte	0x76
 2084 0347 00       		.byte	0
 2085              		.section	.debug_abbrev,"",%progbits
 2086              	.Ldebug_abbrev0:
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 43


 2087 0000 01       		.uleb128 0x1
 2088 0001 11       		.uleb128 0x11
 2089 0002 01       		.byte	0x1
 2090 0003 25       		.uleb128 0x25
 2091 0004 0E       		.uleb128 0xe
 2092 0005 13       		.uleb128 0x13
 2093 0006 0B       		.uleb128 0xb
 2094 0007 03       		.uleb128 0x3
 2095 0008 0E       		.uleb128 0xe
 2096 0009 1B       		.uleb128 0x1b
 2097 000a 0E       		.uleb128 0xe
 2098 000b 55       		.uleb128 0x55
 2099 000c 17       		.uleb128 0x17
 2100 000d 11       		.uleb128 0x11
 2101 000e 01       		.uleb128 0x1
 2102 000f 10       		.uleb128 0x10
 2103 0010 17       		.uleb128 0x17
 2104 0011 00       		.byte	0
 2105 0012 00       		.byte	0
 2106 0013 02       		.uleb128 0x2
 2107 0014 24       		.uleb128 0x24
 2108 0015 00       		.byte	0
 2109 0016 0B       		.uleb128 0xb
 2110 0017 0B       		.uleb128 0xb
 2111 0018 3E       		.uleb128 0x3e
 2112 0019 0B       		.uleb128 0xb
 2113 001a 03       		.uleb128 0x3
 2114 001b 0E       		.uleb128 0xe
 2115 001c 00       		.byte	0
 2116 001d 00       		.byte	0
 2117 001e 03       		.uleb128 0x3
 2118 001f 16       		.uleb128 0x16
 2119 0020 00       		.byte	0
 2120 0021 03       		.uleb128 0x3
 2121 0022 0E       		.uleb128 0xe
 2122 0023 3A       		.uleb128 0x3a
 2123 0024 0B       		.uleb128 0xb
 2124 0025 3B       		.uleb128 0x3b
 2125 0026 0B       		.uleb128 0xb
 2126 0027 49       		.uleb128 0x49
 2127 0028 13       		.uleb128 0x13
 2128 0029 00       		.byte	0
 2129 002a 00       		.byte	0
 2130 002b 04       		.uleb128 0x4
 2131 002c 24       		.uleb128 0x24
 2132 002d 00       		.byte	0
 2133 002e 0B       		.uleb128 0xb
 2134 002f 0B       		.uleb128 0xb
 2135 0030 3E       		.uleb128 0x3e
 2136 0031 0B       		.uleb128 0xb
 2137 0032 03       		.uleb128 0x3
 2138 0033 08       		.uleb128 0x8
 2139 0034 00       		.byte	0
 2140 0035 00       		.byte	0
 2141 0036 05       		.uleb128 0x5
 2142 0037 01       		.uleb128 0x1
 2143 0038 01       		.byte	0x1
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 44


 2144 0039 49       		.uleb128 0x49
 2145 003a 13       		.uleb128 0x13
 2146 003b 01       		.uleb128 0x1
 2147 003c 13       		.uleb128 0x13
 2148 003d 00       		.byte	0
 2149 003e 00       		.byte	0
 2150 003f 06       		.uleb128 0x6
 2151 0040 21       		.uleb128 0x21
 2152 0041 00       		.byte	0
 2153 0042 49       		.uleb128 0x49
 2154 0043 13       		.uleb128 0x13
 2155 0044 2F       		.uleb128 0x2f
 2156 0045 0B       		.uleb128 0xb
 2157 0046 00       		.byte	0
 2158 0047 00       		.byte	0
 2159 0048 07       		.uleb128 0x7
 2160 0049 2E       		.uleb128 0x2e
 2161 004a 01       		.byte	0x1
 2162 004b 3F       		.uleb128 0x3f
 2163 004c 19       		.uleb128 0x19
 2164 004d 03       		.uleb128 0x3
 2165 004e 0E       		.uleb128 0xe
 2166 004f 3A       		.uleb128 0x3a
 2167 0050 0B       		.uleb128 0xb
 2168 0051 3B       		.uleb128 0x3b
 2169 0052 0B       		.uleb128 0xb
 2170 0053 27       		.uleb128 0x27
 2171 0054 19       		.uleb128 0x19
 2172 0055 49       		.uleb128 0x49
 2173 0056 13       		.uleb128 0x13
 2174 0057 11       		.uleb128 0x11
 2175 0058 01       		.uleb128 0x1
 2176 0059 12       		.uleb128 0x12
 2177 005a 06       		.uleb128 0x6
 2178 005b 40       		.uleb128 0x40
 2179 005c 18       		.uleb128 0x18
 2180 005d 9642     		.uleb128 0x2116
 2181 005f 19       		.uleb128 0x19
 2182 0060 01       		.uleb128 0x1
 2183 0061 13       		.uleb128 0x13
 2184 0062 00       		.byte	0
 2185 0063 00       		.byte	0
 2186 0064 08       		.uleb128 0x8
 2187 0065 05       		.uleb128 0x5
 2188 0066 00       		.byte	0
 2189 0067 03       		.uleb128 0x3
 2190 0068 08       		.uleb128 0x8
 2191 0069 3A       		.uleb128 0x3a
 2192 006a 0B       		.uleb128 0xb
 2193 006b 3B       		.uleb128 0x3b
 2194 006c 0B       		.uleb128 0xb
 2195 006d 49       		.uleb128 0x49
 2196 006e 13       		.uleb128 0x13
 2197 006f 02       		.uleb128 0x2
 2198 0070 18       		.uleb128 0x18
 2199 0071 00       		.byte	0
 2200 0072 00       		.byte	0
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 45


 2201 0073 09       		.uleb128 0x9
 2202 0074 34       		.uleb128 0x34
 2203 0075 00       		.byte	0
 2204 0076 03       		.uleb128 0x3
 2205 0077 0E       		.uleb128 0xe
 2206 0078 3A       		.uleb128 0x3a
 2207 0079 0B       		.uleb128 0xb
 2208 007a 3B       		.uleb128 0x3b
 2209 007b 0B       		.uleb128 0xb
 2210 007c 49       		.uleb128 0x49
 2211 007d 13       		.uleb128 0x13
 2212 007e 02       		.uleb128 0x2
 2213 007f 18       		.uleb128 0x18
 2214 0080 00       		.byte	0
 2215 0081 00       		.byte	0
 2216 0082 0A       		.uleb128 0xa
 2217 0083 05       		.uleb128 0x5
 2218 0084 00       		.byte	0
 2219 0085 03       		.uleb128 0x3
 2220 0086 0E       		.uleb128 0xe
 2221 0087 3A       		.uleb128 0x3a
 2222 0088 0B       		.uleb128 0xb
 2223 0089 3B       		.uleb128 0x3b
 2224 008a 0B       		.uleb128 0xb
 2225 008b 49       		.uleb128 0x49
 2226 008c 13       		.uleb128 0x13
 2227 008d 02       		.uleb128 0x2
 2228 008e 18       		.uleb128 0x18
 2229 008f 00       		.byte	0
 2230 0090 00       		.byte	0
 2231 0091 0B       		.uleb128 0xb
 2232 0092 34       		.uleb128 0x34
 2233 0093 00       		.byte	0
 2234 0094 03       		.uleb128 0x3
 2235 0095 08       		.uleb128 0x8
 2236 0096 3A       		.uleb128 0x3a
 2237 0097 0B       		.uleb128 0xb
 2238 0098 3B       		.uleb128 0x3b
 2239 0099 0B       		.uleb128 0xb
 2240 009a 49       		.uleb128 0x49
 2241 009b 13       		.uleb128 0x13
 2242 009c 02       		.uleb128 0x2
 2243 009d 18       		.uleb128 0x18
 2244 009e 00       		.byte	0
 2245 009f 00       		.byte	0
 2246 00a0 0C       		.uleb128 0xc
 2247 00a1 34       		.uleb128 0x34
 2248 00a2 00       		.byte	0
 2249 00a3 03       		.uleb128 0x3
 2250 00a4 0E       		.uleb128 0xe
 2251 00a5 3A       		.uleb128 0x3a
 2252 00a6 0B       		.uleb128 0xb
 2253 00a7 3B       		.uleb128 0x3b
 2254 00a8 0B       		.uleb128 0xb
 2255 00a9 49       		.uleb128 0x49
 2256 00aa 13       		.uleb128 0x13
 2257 00ab 00       		.byte	0
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 46


 2258 00ac 00       		.byte	0
 2259 00ad 0D       		.uleb128 0xd
 2260 00ae 34       		.uleb128 0x34
 2261 00af 00       		.byte	0
 2262 00b0 03       		.uleb128 0x3
 2263 00b1 0E       		.uleb128 0xe
 2264 00b2 3A       		.uleb128 0x3a
 2265 00b3 0B       		.uleb128 0xb
 2266 00b4 3B       		.uleb128 0x3b
 2267 00b5 05       		.uleb128 0x5
 2268 00b6 49       		.uleb128 0x49
 2269 00b7 13       		.uleb128 0x13
 2270 00b8 3F       		.uleb128 0x3f
 2271 00b9 19       		.uleb128 0x19
 2272 00ba 3C       		.uleb128 0x3c
 2273 00bb 19       		.uleb128 0x19
 2274 00bc 00       		.byte	0
 2275 00bd 00       		.byte	0
 2276 00be 0E       		.uleb128 0xe
 2277 00bf 35       		.uleb128 0x35
 2278 00c0 00       		.byte	0
 2279 00c1 49       		.uleb128 0x49
 2280 00c2 13       		.uleb128 0x13
 2281 00c3 00       		.byte	0
 2282 00c4 00       		.byte	0
 2283 00c5 00       		.byte	0
 2284              		.section	.debug_aranges,"",%progbits
 2285 0000 3C000000 		.4byte	0x3c
 2286 0004 0200     		.2byte	0x2
 2287 0006 00000000 		.4byte	.Ldebug_info0
 2288 000a 04       		.byte	0x4
 2289 000b 00       		.byte	0
 2290 000c 0000     		.2byte	0
 2291 000e 0000     		.2byte	0
 2292 0010 00000000 		.4byte	.LFB64
 2293 0014 70000000 		.4byte	.LFE64-.LFB64
 2294 0018 00000000 		.4byte	.LFB65
 2295 001c 68000000 		.4byte	.LFE65-.LFB65
 2296 0020 00000000 		.4byte	.LFB66
 2297 0024 78000000 		.4byte	.LFE66-.LFB66
 2298 0028 00000000 		.4byte	.LFB67
 2299 002c 68000000 		.4byte	.LFE67-.LFB67
 2300 0030 00000000 		.4byte	.LFB68
 2301 0034 C40C0000 		.4byte	.LFE68-.LFB68
 2302 0038 00000000 		.4byte	0
 2303 003c 00000000 		.4byte	0
 2304              		.section	.debug_ranges,"",%progbits
 2305              	.Ldebug_ranges0:
 2306 0000 00000000 		.4byte	.LFB64
 2307 0004 70000000 		.4byte	.LFE64
 2308 0008 00000000 		.4byte	.LFB65
 2309 000c 68000000 		.4byte	.LFE65
 2310 0010 00000000 		.4byte	.LFB66
 2311 0014 78000000 		.4byte	.LFE66
 2312 0018 00000000 		.4byte	.LFB67
 2313 001c 68000000 		.4byte	.LFE67
 2314 0020 00000000 		.4byte	.LFB68
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 47


 2315 0024 C40C0000 		.4byte	.LFE68
 2316 0028 00000000 		.4byte	0
 2317 002c 00000000 		.4byte	0
 2318              		.section	.debug_line,"",%progbits
 2319              	.Ldebug_line0:
 2320 0000 52030000 		.section	.debug_str,"MS",%progbits,1
 2320      02003F01 
 2320      00000201 
 2320      FB0E0D00 
 2320      01010101 
 2321              	.LASF35:
 2322 0000 4F757470 		.ascii	"Output_data_y\000"
 2322      75745F64 
 2322      6174615F 
 2322      7900
 2323              	.LASF40:
 2324 000e 72657475 		.ascii	"return_code\000"
 2324      726E5F63 
 2324      6F646500 
 2325              	.LASF37:
 2326 001a 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2326      43313120 
 2326      352E342E 
 2326      31203230 
 2326      31363036 
 2327 004d 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 2327      20726576 
 2327      6973696F 
 2327      6E203233 
 2327      37373135 
 2328 0080 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 2328      66756E63 
 2328      74696F6E 
 2328      2D736563 
 2328      74696F6E 
 2329              	.LASF9:
 2330 00a8 5F5F696E 		.ascii	"__int32_t\000"
 2330      7433325F 
 2330      7400
 2331              	.LASF18:
 2332 00b2 4F757470 		.ascii	"Output\000"
 2332      757400
 2333              	.LASF17:
 2334 00b9 73696E67 		.ascii	"single_test_preset_vds\000"
 2334      6C655F74 
 2334      6573745F 
 2334      70726573 
 2334      65745F76 
 2335              	.LASF27:
 2336 00d0 785F7069 		.ascii	"x_pixel\000"
 2336      78656C00 
 2337              	.LASF10:
 2338 00d8 696E7433 		.ascii	"int32_t\000"
 2338      325F7400 
 2339              	.LASF28:
 2340 00e0 795F7069 		.ascii	"y_pixel\000"
 2340      78656C00 
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 48


 2341              	.LASF11:
 2342 00e8 666C6F61 		.ascii	"float\000"
 2342      7400
 2343              	.LASF39:
 2344 00ee 433A5C55 		.ascii	"C:\\Users\\Jacob-Laptop\\Documents\\PSoC Creator\\S"
 2344      73657273 
 2344      5C4A6163 
 2344      6F622D4C 
 2344      6170746F 
 2345 011c 656E696F 		.ascii	"enior Project Stuff\\PSoC Curve Tracer PSoC Process"
 2345      72205072 
 2345      6F6A6563 
 2345      74205374 
 2345      7566665C 
 2346 014e 696E675C 		.ascii	"ing\\Senior Project Stuff.cydsn\000"
 2346      53656E69 
 2346      6F722050 
 2346      726F6A65 
 2346      63742053 
 2347              	.LASF16:
 2348 016d 73696E67 		.ascii	"single_test\000"
 2348      6C655F74 
 2348      65737400 
 2349              	.LASF19:
 2350 0179 7667735F 		.ascii	"vgs_th_find\000"
 2350      74685F66 
 2350      696E6400 
 2351              	.LASF5:
 2352 0185 6C6F6E67 		.ascii	"long unsigned int\000"
 2352      20756E73 
 2352      69676E65 
 2352      6420696E 
 2352      7400
 2353              	.LASF3:
 2354 0197 73686F72 		.ascii	"short unsigned int\000"
 2354      7420756E 
 2354      7369676E 
 2354      65642069 
 2354      6E7400
 2355              	.LASF33:
 2356 01aa 5667735F 		.ascii	"Vgs_test_points\000"
 2356      74657374 
 2356      5F706F69 
 2356      6E747300 
 2357              	.LASF41:
 2358 01ba 49544D5F 		.ascii	"ITM_RxBuffer\000"
 2358      52784275 
 2358      66666572 
 2358      00
 2359              	.LASF20:
 2360 01c7 5667735F 		.ascii	"Vgs_max\000"
 2360      6D617800 
 2361              	.LASF1:
 2362 01cf 756E7369 		.ascii	"unsigned char\000"
 2362      676E6564 
 2362      20636861 
 2362      7200
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 49


 2363              	.LASF24:
 2364 01dd 64657669 		.ascii	"device_selection\000"
 2364      63655F73 
 2364      656C6563 
 2364      74696F6E 
 2364      00
 2365              	.LASF12:
 2366 01ee 646F7562 		.ascii	"double\000"
 2366      6C6500
 2367              	.LASF22:
 2368 01f5 5664735F 		.ascii	"Vds_max\000"
 2368      6D617800 
 2369              	.LASF31:
 2370 01fd 63757276 		.ascii	"curve_color\000"
 2370      655F636F 
 2370      6C6F7200 
 2371              	.LASF23:
 2372 0209 6D61696E 		.ascii	"main\000"
 2372      00
 2373              	.LASF8:
 2374 020e 756E7369 		.ascii	"unsigned int\000"
 2374      676E6564 
 2374      20696E74 
 2374      00
 2375              	.LASF29:
 2376 021b 785F7069 		.ascii	"x_pixel_prev\000"
 2376      78656C5F 
 2376      70726576 
 2376      00
 2377              	.LASF7:
 2378 0228 6C6F6E67 		.ascii	"long long unsigned int\000"
 2378      206C6F6E 
 2378      6720756E 
 2378      7369676E 
 2378      65642069 
 2379              	.LASF25:
 2380 023f 795F6D61 		.ascii	"y_max_mA\000"
 2380      785F6D41 
 2380      00
 2381              	.LASF0:
 2382 0248 7369676E 		.ascii	"signed char\000"
 2382      65642063 
 2382      68617200 
 2383              	.LASF32:
 2384 0254 5667735F 		.ascii	"Vgs_step\000"
 2384      73746570 
 2384      00
 2385              	.LASF30:
 2386 025d 795F7069 		.ascii	"y_pixel_prev\000"
 2386      78656C5F 
 2386      70726576 
 2386      00
 2387              	.LASF15:
 2388 026a 73697A65 		.ascii	"sizetype\000"
 2388      74797065 
 2388      00
 2389              	.LASF21:
ARM GAS  C:\Users\JACOB-~1\AppData\Local\Temp\cctp4NqC.s 			page 50


 2390 0273 7667735F 		.ascii	"vgs_max_id_find\000"
 2390      6D61785F 
 2390      69645F66 
 2390      696E6400 
 2391              	.LASF6:
 2392 0283 6C6F6E67 		.ascii	"long long int\000"
 2392      206C6F6E 
 2392      6720696E 
 2392      7400
 2393              	.LASF38:
 2394 0291 6D61696E 		.ascii	"main.c\000"
 2394      2E6300
 2395              	.LASF13:
 2396 0298 63686172 		.ascii	"char\000"
 2396      00
 2397              	.LASF2:
 2398 029d 73686F72 		.ascii	"short int\000"
 2398      7420696E 
 2398      7400
 2399              	.LASF34:
 2400 02a7 5664735F 		.ascii	"Vds_test_points\000"
 2400      74657374 
 2400      5F706F69 
 2400      6E747300 
 2401              	.LASF4:
 2402 02b7 6C6F6E67 		.ascii	"long int\000"
 2402      20696E74 
 2402      00
 2403              	.LASF14:
 2404 02c0 6C6F6E67 		.ascii	"long double\000"
 2404      20646F75 
 2404      626C6500 
 2405              	.LASF26:
 2406 02cc 785F6D61 		.ascii	"x_max_mV\000"
 2406      785F6D56 
 2406      00
 2407              	.LASF36:
 2408 02d5 4F757470 		.ascii	"Output_data_x\000"
 2408      75745F64 
 2408      6174615F 
 2408      7800
 2409              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
